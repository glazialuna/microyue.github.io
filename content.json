{"meta":{"title":"Bonny & Pony","subtitle":null,"description":null,"author":"glazia_luna","url":"http://www.microyue.com","root":"/"},"pages":[],"posts":[{"title":"Notre-Dame de Paris","subtitle":null,"date":"2019-04-16T05:49:04.000Z","path":"2019/04/16/Notre-Dame-de-Paris/","text":"2019年4月15日，整修中的巴黎圣母院发生火灾，失火点位于教堂楼阁处，大火导致其尖顶坍塌，巴黎警察局表示起火原因很可能与现场修缮施工有关。 现在是4月16号，从早晨开始，中国的社群网络挂起来了一股哀悼的风，在风中裹挟着各种的观点。在这一个时代，一场大火的时效性在一天以内，而个人的观点在id后面发出自己的声音。 我是在吃中饭的时候看到这条消息，更准确地说看到了许多人对这个消息的态度，有人为伟大的艺术成就而哀悼，有人感激复刻全局的公司，有人想起了曾经的圆明园，有人感叹文化输出。 而我想要搜寻关于它的历史，关于它的图片，在wiki百科上已经有人迅速地增加了它的条目4.15火灾.怎么说，一个地标性建筑，沐浴过战火与鲜血，承载了宗教与信仰，800年的建筑。它的消逝，虽然只是一个阁楼，而这个阁楼的照片却是最为经典的。 我却羡慕巴黎圣母院的毁灭能够在这样一个和平的年代。","raw":"---\ntitle: Notre-Dame de Paris\ndate: 2019-04-16 13:49:04\nsubtitle:\nabstract: 2019年4月15日，整修中的巴黎圣母院发生火灾，失火点位于教堂楼阁处，大火导致其尖顶坍塌，巴黎警察局表示起火原因很可能与现场修缮施工有关。\ntags:\ncategories:\n - [随笔]\n---\n   2019年4月15日，整修中的巴黎圣母院发生火灾，失火点位于教堂楼阁处，大火导致其尖顶坍塌，巴黎警察局表示起火原因很可能与现场修缮施工有关。\n\n   现在是4月16号，从早晨开始，中国的社群网络挂起来了一股哀悼的风，在风中裹挟着各种的观点。在这一个时代，一场大火的时效性在一天以内，而个人的观点在id后面发出自己的声音。\n\n   我是在吃中饭的时候看到这条消息，更准确地说看到了许多人对这个消息的态度，有人为伟大的艺术成就而哀悼，有人感激复刻全局的公司，有人想起了曾经的圆明园，有人感叹文化输出。\n\n   而我想要搜寻关于它的历史，关于它的图片，在wiki百科上已经有人迅速地增加了它的条目[4.15火灾](https://zh.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E%E8%81%96%E6%AF%8D%E9%99%A2).怎么说，一个地标性建筑，沐浴过战火与鲜血，承载了宗教与信仰，800年的建筑。它的消逝，虽然只是一个阁楼，而这个阁楼的照片却是最为经典的。\n\n   \n\n\n   我却羡慕巴黎圣母院的毁灭能够在这样一个和平的年代。\n","content":"<p>   2019年4月15日，整修中的巴黎圣母院发生火灾，失火点位于教堂楼阁处，大火导致其尖顶坍塌，巴黎警察局表示起火原因很可能与现场修缮施工有关。</p>\n<p>   现在是4月16号，从早晨开始，中国的社群网络挂起来了一股哀悼的风，在风中裹挟着各种的观点。在这一个时代，一场大火的时效性在一天以内，而个人的观点在id后面发出自己的声音。</p>\n<p>   我是在吃中饭的时候看到这条消息，更准确地说看到了许多人对这个消息的态度，有人为伟大的艺术成就而哀悼，有人感激复刻全局的公司，有人想起了曾经的圆明园，有人感叹文化输出。</p>\n<p>   而我想要搜寻关于它的历史，关于它的图片，在wiki百科上已经有人迅速地增加了它的条目<a href=\"https://zh.wikipedia.org/wiki/%E5%B7%B4%E9%BB%8E%E8%81%96%E6%AF%8D%E9%99%A2\" target=\"_blank\" rel=\"noopener\">4.15火灾</a>.怎么说，一个地标性建筑，沐浴过战火与鲜血，承载了宗教与信仰，800年的建筑。它的消逝，虽然只是一个阁楼，而这个阁楼的照片却是最为经典的。</p>\n<p>   我却羡慕巴黎圣母院的毁灭能够在这样一个和平的年代。</p>\n","slug":"Notre-Dame-de-Paris","updated":"2019-04-16T07:54:11.599Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/16/Notre-Dame-de-Paris/","excerpt":"","categories":[{"name":"随笔","slug":"随笔","permalink":"http://www.microyue.com/categories/随笔/"}],"tags":[]},{"title":"Class for IS","subtitle":null,"date":"2019-04-15T10:02:51.000Z","path":"2019/04/15/Class-for-IS/","text":"Preface A class by htl. ReviewsComputer SecurityCryptographyAuthorization and Access ContrlNetwork SecurityAssignments Analysis Remind that …… for zju sutdents.To avoid easy search I omitted the detailed description of the assignments or write in another way by myself. assignment 1assignment 2assignment 3assignment 4appenddixclass_materials","raw":"---\ntitle: Class for IS\ndate: 2019-04-15 18:02:51\nsubtitle:\nabstract: 期末考试整理版-IS for HTL\ntags:\ncategories:\n - 考试整理\n---\n# Preface\n  A class by htl.\n\n# Reviews\n## Computer Security\n## Cryptography\n## Authorization and Access Contrl\n## Network Security\n\n\n# Assignments Analysis\n  Remind that ...... for zju sutdents.To avoid easy search I omitted the detailed description of the assignments or write in another way by myself. \n  \n## assignment 1\n## assignment 2\n## assignment 3\n## assignment 4\n\n# appenddix\n[class_materials](class-materials/)\n\n","content":"<h1 id=\"Preface\"><a href=\"#Preface\" class=\"headerlink\" title=\"Preface\"></a>Preface</h1><p>  A class by htl.</p>\n<h1 id=\"Reviews\"><a href=\"#Reviews\" class=\"headerlink\" title=\"Reviews\"></a>Reviews</h1><h2 id=\"Computer-Security\"><a href=\"#Computer-Security\" class=\"headerlink\" title=\"Computer Security\"></a>Computer Security</h2><h2 id=\"Cryptography\"><a href=\"#Cryptography\" class=\"headerlink\" title=\"Cryptography\"></a>Cryptography</h2><h2 id=\"Authorization-and-Access-Contrl\"><a href=\"#Authorization-and-Access-Contrl\" class=\"headerlink\" title=\"Authorization and Access Contrl\"></a>Authorization and Access Contrl</h2><h2 id=\"Network-Security\"><a href=\"#Network-Security\" class=\"headerlink\" title=\"Network Security\"></a>Network Security</h2><h1 id=\"Assignments-Analysis\"><a href=\"#Assignments-Analysis\" class=\"headerlink\" title=\"Assignments Analysis\"></a>Assignments Analysis</h1><p>  Remind that …… for zju sutdents.To avoid easy search I omitted the detailed description of the assignments or write in another way by myself. </p>\n<h2 id=\"assignment-1\"><a href=\"#assignment-1\" class=\"headerlink\" title=\"assignment 1\"></a>assignment 1</h2><h2 id=\"assignment-2\"><a href=\"#assignment-2\" class=\"headerlink\" title=\"assignment 2\"></a>assignment 2</h2><h2 id=\"assignment-3\"><a href=\"#assignment-3\" class=\"headerlink\" title=\"assignment 3\"></a>assignment 3</h2><h2 id=\"assignment-4\"><a href=\"#assignment-4\" class=\"headerlink\" title=\"assignment 4\"></a>assignment 4</h2><h1 id=\"appenddix\"><a href=\"#appenddix\" class=\"headerlink\" title=\"appenddix\"></a>appenddix</h1><p><a href=\"class-materials/\">class_materials</a></p>\n","slug":"Class-for-IS","updated":"2019-04-16T03:51:14.885Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/15/Class-for-IS/","excerpt":"","categories":[{"name":"考试整理","slug":"考试整理","permalink":"http://www.microyue.com/categories/考试整理/"}],"tags":[]},{"title":"小车全局规划路径","subtitle":null,"date":"2019-04-13T08:35:56.000Z","path":"2019/04/13/小车全局规划路径/","text":"前言 关于小车的路径规划问题，附录课件（？？？？？？） 路径规划问题路径规划问题概述A*算法part one: A*算法过程matlab Astar定义 part two: 详细工程和代码assignment 1: 不考虑小车体积的A*算法 实现过程在labview的仿真环境下，labview自带有Astar的算法,把调用模块换成了matlab的算法1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374[rows,cols]=size(map);%read map sizestart_node = sub2ind(size(map), start_x+1, start_y+1);%注意从0开始goal_node = sub2ind(size(map), goal_x+1, goal_y+1);%索引start,goal% 计算f=h(goal)+g(start)[x, y] = meshgrid (1:cols, 1:rows);H = abs(x - goal_y) + abs(y - goal_x);%H H储存每一个点距离goal的哈密顿距离f = Inf(rows,cols); f(start_node) = H(start_node);%f 价值distanceFromStart = Inf(rows,cols);distanceFromStart(start_node) = 0; % 探索矩阵h(n)% Initialize distance arraydirection = zeros(rows,cols); parent = zeros(rows,cols); %父节点索引% ----------------------Main Loop-------------------------------while true % Find the node with the minimum distance % current = min( f(:)+distanceFromStart(:) ); % 返回当前f+h最小的索引 % min_dist = distanceFromStart(current); [dummy, current] = min( f(:)+distanceFromStart(:) ); [min_dist, dummy] = min(distanceFromStart(:)); if ((current == goal_node) || isinf(min_dist)) break; end; %============ f(current) = Inf; %当前区域在距离数组中设置为无穷，表示已搜索 %============ [i, j] = ind2sub(size(distanceFromStart), current); %上下左右判断 neighbor = [i-1,j; i+1,j; i,j+1; i,j-1]; %确定当前位置的上下左右区域 outRangetest = (neighbor(:,1)&lt;1) + (neighbor(:,1)&gt;rows) +(neighbor(:,2)&lt;1) + (neighbor(:,2)&gt;cols); %判断下一次搜索的区域是否超出限制 locate = find(outRangetest&gt;0); %返回超限点的行数 neighborIndex = sub2ind(size(map),neighbor(:,1),neighbor(:,2)); %在下一次搜索区域里去掉超限点，搜索到边界了 for i=1:length(neighborIndex) if (map(neighborIndex(i))~=100) &amp;&amp; (map(neighborIndex(i))~=5) map(neighborIndex(i)) = 5; % 如果下次搜索的点不是障碍，没有搜索过标为蓝色 if distanceFromStart(neighborIndex(i))&gt; min_dist + map(neighborIndex(i)) + 1 distanceFromStart(neighborIndex(i)) = min_dist + map(neighborIndex(i)) + 1 ; parent(neighborIndex(i)) = current; %[m1, n1] = ind2sub(size(map), neighborIndex(i)); %[m2, n2] = ind2sub(size(map), current); %direction(neighborIndex(i)) = 3 * (m1-m2) + (n1-n2) + 5; f(neighborIndex(i)) = H(neighborIndex(i)); end %end if end %end if end %end forend % end while%%if (isinf(distanceFromStart(goal_node))) route = [];else %提取路线坐标 route = [goal_node]; %dire = [ direction(goal_node) ]; while (parent(route(1)) ~= 0) route = [parent(route(1)), route]; %dire = [direction(route(1)),dire]; end end[X(1:length(route)),Y(1:length(route))]=ind2sub(size(map),route);X=X-1;Y=Y-1; labview工程链接 assignment 2: 考虑小车体积的A*算法之全局定位法Step 1: 选取地图A，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。 Step 2： 在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。 定位方式选择全局定位-仿真环境中直接得到实时的小车全局位置和旋转矩阵（即朝向） assignment 3: 考虑小车体积的A*算法之自定位法Step 1: 选取地图B，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。 Step 2： 在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。 定位方式选择自定位——仿真环境中可实时得到当前轮转速和2Hz频率的观测位置（真实）与旋转矩阵（即朝向），可实现基于里程计+观测位置的自定位。","raw":"---\ntitle: 小车全局规划路径\ndate: 2019-04-13 16:35:56\nsubtitle:\nabstract: A*算法（考虑小车路径）\ntags:\n- labview\n- Dani\ncategories:\n- Robotics\n---\n# 前言\n  关于小车的路径规划问题，附录课件（__？？？？？？__）\n\n# 路径规划问题\n## 路径规划问题概述\n\n\n# A\\*算法\n## part one: A\\*算法过程\n\n[matlab Astar定义](\\code\\matlab\\Astar.zip)\n\n## part two: 详细工程和代码\n\n### assignment 1: 不考虑小车体积的A\\*算法\n  实现过程在labview的仿真环境下，labview自带有Astar的算法,把调用模块换成了matlab的算法\n```m\n[rows,cols]=size(map);%read map size\nstart_node = sub2ind(size(map), start_x+1, start_y+1);%注意从0开始\ngoal_node = sub2ind(size(map), goal_x+1, goal_y+1);%索引start,goal\n\n% 计算f=h(goal)+g(start)\n[x, y] = meshgrid (1:cols, 1:rows);\nH = abs(x - goal_y) + abs(y - goal_x);%H H储存每一个点距离goal的哈密顿距离\nf = Inf(rows,cols); \nf(start_node) = H(start_node);%f 价值\ndistanceFromStart = Inf(rows,cols);\ndistanceFromStart(start_node) = 0; % 探索矩阵h(n)\n\n% Initialize distance array\ndirection = zeros(rows,cols); \nparent = zeros(rows,cols); %父节点索引\n\n% ----------------------Main Loop-------------------------------\nwhile true\n  % Find the node with the minimum distance\n  % current = min( f(:)+distanceFromStart(:) ); % 返回当前f+h最小的索引\n  % min_dist = distanceFromStart(current);\n  [dummy, current] = min( f(:)+distanceFromStart(:) );\n  [min_dist, dummy] = min(distanceFromStart(:));\n  if ((current == goal_node) || isinf(min_dist))\n    break;\n  end;\n\n  %============\n  f(current) = Inf; %当前区域在距离数组中设置为无穷，表示已搜索\n  %============\n  [i, j] = ind2sub(size(distanceFromStart), current);\n  %上下左右判断\n  neighbor = [i-1,j;\n              i+1,j;\n              i,j+1;\n              i,j-1]; %确定当前位置的上下左右区域\n  outRangetest = (neighbor(:,1)<1) + (neighbor(:,1)>rows)\n                +(neighbor(:,2)<1) + (neighbor(:,2)>cols); %判断下一次搜索的区域是否超出限制\n  locate = find(outRangetest>0); %返回超限点的行数\n\n  neighborIndex = sub2ind(size(map),neighbor(:,1),neighbor(:,2)); \n  %在下一次搜索区域里去掉超限点，搜索到边界了\n  \n  for i=1:length(neighborIndex)\n    if (map(neighborIndex(i))~=100) && (map(neighborIndex(i))~=5)\n      map(neighborIndex(i)) = 5; % 如果下次搜索的点不是障碍，没有搜索过标为蓝色\n      if distanceFromStart(neighborIndex(i))> min_dist + map(neighborIndex(i)) + 1      \n          distanceFromStart(neighborIndex(i)) = min_dist + map(neighborIndex(i)) + 1 ;\n          parent(neighborIndex(i)) = current;\n          %[m1, n1] = ind2sub(size(map), neighborIndex(i));\n          %[m2, n2] = ind2sub(size(map), current);\n          %direction(neighborIndex(i)) = 3 * (m1-m2) + (n1-n2) + 5;\n          f(neighborIndex(i)) =  H(neighborIndex(i));\n      end %end if\n    end %end if\n  end %end for\n\nend % end while\n\n%%\nif (isinf(distanceFromStart(goal_node)))\n    route = [];\nelse\n    %提取路线坐标\n   route = [goal_node];\n   %dire = [ direction(goal_node) ];\n       while (parent(route(1)) ~= 0)\n           route = [parent(route(1)), route];\n           %dire = [direction(route(1)),dire];\n       end \nend\n[X(1:length(route)),Y(1:length(route))]=ind2sub(size(map),route);\nX=X-1;\nY=Y-1;\n```\n[labview工程链接](\\pro\\labview\\Find Path with Astar Folder.rar)\n\n### __assignment 2: 考虑小车体积的A\\*算法之全局定位法__\n#### Step 1:\n  选取地图A，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。\n\n#### Step 2：\n  在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。\n  定位方式选择全局定位-仿真环境中直接得到实时的小车全局位置和旋转矩阵（即朝向）\n\n\n### __assignment 3: 考虑小车体积的A\\*算法之自定位法__\n#### Step 1:\n  选取地图B，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。\n\n#### Step 2：\n  在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。\n  定位方式选择自定位——仿真环境中可实时得到当前轮转速和2Hz频率的观测位置（真实）与旋转矩阵（即朝向），可实现基于里程计+观测位置的自定位。","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>  关于小车的路径规划问题，附录课件（<strong>？？？？？？</strong>）</p>\n<h1 id=\"路径规划问题\"><a href=\"#路径规划问题\" class=\"headerlink\" title=\"路径规划问题\"></a>路径规划问题</h1><h2 id=\"路径规划问题概述\"><a href=\"#路径规划问题概述\" class=\"headerlink\" title=\"路径规划问题概述\"></a>路径规划问题概述</h2><h1 id=\"A-算法\"><a href=\"#A-算法\" class=\"headerlink\" title=\"A*算法\"></a>A*算法</h1><h2 id=\"part-one-A-算法过程\"><a href=\"#part-one-A-算法过程\" class=\"headerlink\" title=\"part one: A*算法过程\"></a>part one: A*算法过程</h2><p><a href=\"\\code\\matlab\\Astar.zip\">matlab Astar定义</a></p>\n<h2 id=\"part-two-详细工程和代码\"><a href=\"#part-two-详细工程和代码\" class=\"headerlink\" title=\"part two: 详细工程和代码\"></a>part two: 详细工程和代码</h2><h3 id=\"assignment-1-不考虑小车体积的A-算法\"><a href=\"#assignment-1-不考虑小车体积的A-算法\" class=\"headerlink\" title=\"assignment 1: 不考虑小车体积的A*算法\"></a>assignment 1: 不考虑小车体积的A*算法</h3><p>  实现过程在labview的仿真环境下，labview自带有Astar的算法,把调用模块换成了matlab的算法<br><figure class=\"highlight m\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rows,cols]<span class=\"built_in\">=</span>size(map);<span class=\"comment\">%read map size</span></span><br><span class=\"line\">start_node <span class=\"built_in\">=</span> sub2ind(size(map), start_x+<span class=\"number\">1</span>, start_y+<span class=\"number\">1</span>);<span class=\"comment\">%注意从0开始</span></span><br><span class=\"line\">goal_node <span class=\"built_in\">=</span> sub2ind(size(map), goal_x+<span class=\"number\">1</span>, goal_y+<span class=\"number\">1</span>);<span class=\"comment\">%索引start,goal</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 计算f=h(goal)+g(start)</span></span><br><span class=\"line\">[x, y] <span class=\"built_in\">=</span> meshgrid (<span class=\"number\">1</span>:cols, <span class=\"number\">1</span>:rows);</span><br><span class=\"line\">H <span class=\"built_in\">=</span> abs(x - goal_y) + abs(y - goal_x);<span class=\"comment\">%H H储存每一个点距离goal的哈密顿距离</span></span><br><span class=\"line\">f <span class=\"built_in\">=</span> Inf(rows,cols); </span><br><span class=\"line\">f(start_node) <span class=\"built_in\">=</span> H(start_node);<span class=\"comment\">%f 价值</span></span><br><span class=\"line\">distanceFromStart <span class=\"built_in\">=</span> Inf(rows,cols);</span><br><span class=\"line\">distanceFromStart(start_node) <span class=\"built_in\">=</span> <span class=\"number\">0</span>; <span class=\"comment\">% 探索矩阵h(n)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% Initialize distance array</span></span><br><span class=\"line\">direction <span class=\"built_in\">=</span> zeros(rows,cols); </span><br><span class=\"line\">parent <span class=\"built_in\">=</span> zeros(rows,cols); <span class=\"comment\">%父节点索引</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% ----------------------Main Loop-------------------------------</span></span><br><span class=\"line\">while <span class=\"built_in\">true</span></span><br><span class=\"line\">  <span class=\"comment\">% Find the node with the minimum distance</span></span><br><span class=\"line\">  <span class=\"comment\">% current = min( f(:)+distanceFromStart(:) ); % 返回当前f+h最小的索引</span></span><br><span class=\"line\">  <span class=\"comment\">% min_dist = distanceFromStart(current);</span></span><br><span class=\"line\">  [dummy, current] <span class=\"built_in\">=</span> min( f(:)+distanceFromStart(:) );</span><br><span class=\"line\">  [min_dist, dummy] <span class=\"built_in\">=</span> min(distanceFromStart(:));</span><br><span class=\"line\">  <span class=\"built_in\">if</span> ((current <span class=\"built_in\">=</span><span class=\"built_in\">=</span> goal_node) || isinf(min_dist))</span><br><span class=\"line\">    break;</span><br><span class=\"line\">  end;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">%============</span></span><br><span class=\"line\">  f(current) <span class=\"built_in\">=</span> Inf; <span class=\"comment\">%当前区域在距离数组中设置为无穷，表示已搜索</span></span><br><span class=\"line\">  <span class=\"comment\">%============</span></span><br><span class=\"line\">  [i, j] <span class=\"built_in\">=</span> ind2sub(size(distanceFromStart), current);</span><br><span class=\"line\">  <span class=\"comment\">%上下左右判断</span></span><br><span class=\"line\">  neighbor <span class=\"built_in\">=</span> [i-<span class=\"number\">1</span>,j;</span><br><span class=\"line\">              i+<span class=\"number\">1</span>,j;</span><br><span class=\"line\">              i,j+<span class=\"number\">1</span>;</span><br><span class=\"line\">              i,j-<span class=\"number\">1</span>]; <span class=\"comment\">%确定当前位置的上下左右区域</span></span><br><span class=\"line\">  outRangetest <span class=\"built_in\">=</span> (neighbor(:,<span class=\"number\">1</span>)&lt;<span class=\"number\">1</span>) + (neighbor(:,<span class=\"number\">1</span>)&gt;rows)</span><br><span class=\"line\">                +(neighbor(:,<span class=\"number\">2</span>)&lt;<span class=\"number\">1</span>) + (neighbor(:,<span class=\"number\">2</span>)&gt;cols); <span class=\"comment\">%判断下一次搜索的区域是否超出限制</span></span><br><span class=\"line\">  locate <span class=\"built_in\">=</span> find(outRangetest&gt;<span class=\"number\">0</span>); <span class=\"comment\">%返回超限点的行数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  neighborIndex <span class=\"built_in\">=</span> sub2ind(size(map),neighbor(:,<span class=\"number\">1</span>),neighbor(:,<span class=\"number\">2</span>)); </span><br><span class=\"line\">  <span class=\"comment\">%在下一次搜索区域里去掉超限点，搜索到边界了</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  for i<span class=\"built_in\">=</span><span class=\"number\">1</span>:length(neighborIndex)</span><br><span class=\"line\">    <span class=\"built_in\">if</span> (map(neighborIndex(i))~<span class=\"built_in\">=</span><span class=\"number\">100</span>) &amp;&amp; (map(neighborIndex(i))~<span class=\"built_in\">=</span><span class=\"number\">5</span>)</span><br><span class=\"line\">      map(neighborIndex(i)) <span class=\"built_in\">=</span> <span class=\"number\">5</span>; <span class=\"comment\">% 如果下次搜索的点不是障碍，没有搜索过标为蓝色</span></span><br><span class=\"line\">      <span class=\"built_in\">if</span> distanceFromStart(neighborIndex(i))&gt; min_dist + map(neighborIndex(i)) + <span class=\"number\">1</span>      </span><br><span class=\"line\">          distanceFromStart(neighborIndex(i)) <span class=\"built_in\">=</span> min_dist + map(neighborIndex(i)) + <span class=\"number\">1</span> ;</span><br><span class=\"line\">          parent(neighborIndex(i)) <span class=\"built_in\">=</span> current;</span><br><span class=\"line\">          <span class=\"comment\">%[m1, n1] = ind2sub(size(map), neighborIndex(i));</span></span><br><span class=\"line\">          <span class=\"comment\">%[m2, n2] = ind2sub(size(map), current);</span></span><br><span class=\"line\">          <span class=\"comment\">%direction(neighborIndex(i)) = 3 * (m1-m2) + (n1-n2) + 5;</span></span><br><span class=\"line\">          f(neighborIndex(i)) <span class=\"built_in\">=</span>  H(neighborIndex(i));</span><br><span class=\"line\">      end <span class=\"comment\">%end if</span></span><br><span class=\"line\">    end <span class=\"comment\">%end if</span></span><br><span class=\"line\">  end <span class=\"comment\">%end for</span></span><br><span class=\"line\"></span><br><span class=\"line\">end <span class=\"comment\">% end while</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%</span></span><br><span class=\"line\"><span class=\"built_in\">if</span> (isinf(distanceFromStart(goal_node)))</span><br><span class=\"line\">    route <span class=\"built_in\">=</span> [];</span><br><span class=\"line\"><span class=\"built_in\">else</span></span><br><span class=\"line\">    <span class=\"comment\">%提取路线坐标</span></span><br><span class=\"line\">   route <span class=\"built_in\">=</span> [goal_node];</span><br><span class=\"line\">   <span class=\"comment\">%dire = [ direction(goal_node) ];</span></span><br><span class=\"line\">       while (parent(route(<span class=\"number\">1</span>)) ~<span class=\"built_in\">=</span> <span class=\"number\">0</span>)</span><br><span class=\"line\">           route <span class=\"built_in\">=</span> [parent(route(<span class=\"number\">1</span>)), route];</span><br><span class=\"line\">           <span class=\"comment\">%dire = [direction(route(1)),dire];</span></span><br><span class=\"line\">       end </span><br><span class=\"line\">end</span><br><span class=\"line\">[X(<span class=\"number\">1</span>:length(route)),Y(<span class=\"number\">1</span>:length(route))]<span class=\"built_in\">=</span>ind2sub(size(map),route);</span><br><span class=\"line\">X<span class=\"built_in\">=</span>X-<span class=\"number\">1</span>;</span><br><span class=\"line\">Y<span class=\"built_in\">=</span>Y-<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"\\pro\\labview\\Find Path with Astar Folder.rar\">labview工程链接</a></p>\n<h3 id=\"assignment-2-考虑小车体积的A-算法之全局定位法\"><a href=\"#assignment-2-考虑小车体积的A-算法之全局定位法\" class=\"headerlink\" title=\"assignment 2: 考虑小车体积的A*算法之全局定位法\"></a><strong>assignment 2: 考虑小车体积的A*算法之全局定位法</strong></h3><h4 id=\"Step-1\"><a href=\"#Step-1\" class=\"headerlink\" title=\"Step 1:\"></a>Step 1:</h4><p>  选取地图A，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。</p>\n<h4 id=\"Step-2：\"><a href=\"#Step-2：\" class=\"headerlink\" title=\"Step 2：\"></a>Step 2：</h4><p>  在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。<br>  定位方式选择全局定位-仿真环境中直接得到实时的小车全局位置和旋转矩阵（即朝向）</p>\n<h3 id=\"assignment-3-考虑小车体积的A-算法之自定位法\"><a href=\"#assignment-3-考虑小车体积的A-算法之自定位法\" class=\"headerlink\" title=\"assignment 3: 考虑小车体积的A*算法之自定位法\"></a><strong>assignment 3: 考虑小车体积的A*算法之自定位法</strong></h3><h4 id=\"Step-1-1\"><a href=\"#Step-1-1\" class=\"headerlink\" title=\"Step 1:\"></a>Step 1:</h4><p>  选取地图B，对选取的地图，就起点（0.5，0.5）与终点（9.5，9.5）使用全局最优规划算法对最优路径进行搜索。（使用assignment 1方法离线完成）。</p>\n<h4 id=\"Step-2：-1\"><a href=\"#Step-2：-1\" class=\"headerlink\" title=\"Step 2：\"></a>Step 2：</h4><p>  在得到路径之后，使用matlab程序写入mathscript节点，控制双轮转速实现小车运动，沿着指定路径进行运动。<br>  定位方式选择自定位——仿真环境中可实时得到当前轮转速和2Hz频率的观测位置（真实）与旋转矩阵（即朝向），可实现基于里程计+观测位置的自定位。</p>\n","slug":"小车全局规划路径","updated":"2019-04-13T09:06:26.720Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/13/小车全局规划路径/","excerpt":"","categories":[{"name":"Robotics","slug":"Robotics","permalink":"http://www.microyue.com/categories/Robotics/"}],"tags":[{"name":"labview","slug":"labview","permalink":"http://www.microyue.com/tags/labview/"},{"name":"Dani","slug":"Dani","permalink":"http://www.microyue.com/tags/Dani/"}]},{"title":"建立Hexo + Github的个人博客步骤","subtitle":null,"date":"2019-04-11T05:51:03.000Z","path":"2019/04/11/建立Hexo-Github的个人博客步骤/","text":"前言 写着作业觉得可以尝试一波blog记录了，搜索了一下，hexo作为一种比较简单，依赖较少，安装方便且支持markdown语言的优秀工具……嘿嘿 准备材料安装依赖1.node.js安装官网传送门2.git安装git官网传送门git教程3.hexo安装 a 本地hexoStep1 建立文件夹用以储存： 文件夹的内容展示如下： Step2 初始化HexoStep3 新建post分解 hexo new “New blog” 此处可简化为 > hexo n ```123456789101112131415161718192021222324252627### Step4 上传&gt;hexo g&gt;hexo s&gt;hexo d### appendix1 hexo命令### appendix2 theme修改## 链接github### Step1 新建repo### Step2 修改blog配置文件## 链接域名(Namesilo)### Step1 DNS解析### Step2 链接github### Step3 使用## 其他使用### part 1 增加本地图片#### 方法一 使用标签插件这个是HEXO 3 之前一位网友为图片路径开发的插件，被集成在了Hexo3 里面，官方文档的使用方法如下：```md&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 使用案例： 这种方式的问题在于，使用markdown文档编辑器时不能看到图片，只能显示标签代码 小尾巴啪啦啪啦，简单地就建立玩玩看呀~~至于残留的问题我，不管了先哼唧~","raw":"---\ntitle: 建立Hexo + Github的个人博客步骤\nsubtitle:\ndate: 2019-04-11 13:51:03\nabstract: 简单的过程记录和回顾，非常简单的过程哈哈哈哈\ntags:\n - Hexo\ncategories:\n - [Skill, Hexo]\n---\n## 前言\n  写着作业觉得可以尝试一波blog记录了，搜索了一下，hexo作为一种比较简单，依赖较少，安装方便且支持markdown语言的优秀工具......嘿嘿\n\n## 准备材料\n### 安装依赖\n1.__node.js__安装[官网传送门](https://classroom.udacity.com/courses/ud187)\n2.git安装\n[git官网传送门](https://git-scm.com/download/win)\n[git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n3.hexo安装\n> a\n\n\n\n## 本地hexo\n### Step1 建立文件夹\n\t用以储存：\n\t文件夹的内容展示如下：\n\n### Step2 初始化Hexo\n\n### Step3 新建post\n\t分解\n>hexo new \"New blog\"\n\t此处可简化为 ```m > hexo n ```\n\n### Step4 上传\n>hexo g\n>hexo s\n>hexo d\n\n### appendix1 hexo命令\n### appendix2 theme修改\n\n## 链接github\n### Step1 新建repo\n### Step2 修改blog配置文件\n\n\n## 链接域名(Namesilo)\n### Step1 DNS解析\n### Step2 链接github\n### Step3 使用\n\n## 其他使用\n### part 1 增加本地图片\n#### 方法一 使用标签插件\n这个是HEXO 3 之前一位网友为图片路径开发的插件，被集成在了Hexo3 里面，官方文档的使用方法如下：\n```md\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n使用案例：\n```md\n```\n这种方式的问题在于，使用markdown文档编辑器时不能看到图片，只能显示标签代码\n\n\n## 小尾巴\n\t啪啦啪啦，简单地就建立玩玩看呀~~至于残留的问题我，不管了先哼唧~\n","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>  写着作业觉得可以尝试一波blog记录了，搜索了一下，hexo作为一种比较简单，依赖较少，安装方便且支持markdown语言的优秀工具……嘿嘿</p>\n<h2 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h2><h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><p>1.<strong>node.js</strong>安装<a href=\"https://classroom.udacity.com/courses/ud187\" target=\"_blank\" rel=\"noopener\">官网传送门</a><br>2.git安装<br><a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git官网传送门</a><br><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">git教程</a><br>3.hexo安装</p>\n<blockquote>\n<p>a</p>\n</blockquote>\n<h2 id=\"本地hexo\"><a href=\"#本地hexo\" class=\"headerlink\" title=\"本地hexo\"></a>本地hexo</h2><h3 id=\"Step1-建立文件夹\"><a href=\"#Step1-建立文件夹\" class=\"headerlink\" title=\"Step1 建立文件夹\"></a>Step1 建立文件夹</h3><pre><code>用以储存：\n文件夹的内容展示如下：\n</code></pre><h3 id=\"Step2-初始化Hexo\"><a href=\"#Step2-初始化Hexo\" class=\"headerlink\" title=\"Step2 初始化Hexo\"></a>Step2 初始化Hexo</h3><h3 id=\"Step3-新建post\"><a href=\"#Step3-新建post\" class=\"headerlink\" title=\"Step3 新建post\"></a>Step3 新建post</h3><pre><code>分解\n</code></pre><blockquote>\n<p>hexo new “New blog”<br>    此处可简化为 <figure class=\"highlight m\"><figcaption><span>> hexo n ```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### Step4 上传</span><br><span class=\"line\">&gt;hexo g</span><br><span class=\"line\">&gt;hexo s</span><br><span class=\"line\">&gt;hexo d</span><br><span class=\"line\"></span><br><span class=\"line\">### appendix1 hexo命令</span><br><span class=\"line\">### appendix2 theme修改</span><br><span class=\"line\"></span><br><span class=\"line\">## 链接github</span><br><span class=\"line\">### Step1 新建repo</span><br><span class=\"line\">### Step2 修改blog配置文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## 链接域名(Namesilo)</span><br><span class=\"line\">### Step1 DNS解析</span><br><span class=\"line\">### Step2 链接github</span><br><span class=\"line\">### Step3 使用</span><br><span class=\"line\"></span><br><span class=\"line\">## 其他使用</span><br><span class=\"line\">### part <span class=\"number\">1</span> 增加本地图片</span><br><span class=\"line\">#### 方法一 使用标签插件</span><br><span class=\"line\">这个是HEXO <span class=\"number\">3</span> 之前一位网友为图片路径开发的插件，被集成在了Hexo3 里面，官方文档的使用方法如下：</span><br><span class=\"line\">```md</span><br><span class=\"line\">&#123;<span class=\"comment\">% asset_path slug %&#125;</span></span><br><span class=\"line\">&#123;<span class=\"comment\">% asset_img slug [title] %&#125;</span></span><br><span class=\"line\">&#123;<span class=\"comment\">% asset_link slug [title] %&#125;</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>使用案例：</p>\n<pre><code class=\"md\">\n</code></pre>\n<p>这种方式的问题在于，使用markdown文档编辑器时不能看到图片，只能显示标签代码</p>\n<h2 id=\"小尾巴\"><a href=\"#小尾巴\" class=\"headerlink\" title=\"小尾巴\"></a>小尾巴</h2><pre><code>啪啦啪啦，简单地就建立玩玩看呀~~至于残留的问题我，不管了先哼唧~\n</code></pre>","slug":"建立Hexo-Github的个人博客步骤","updated":"2019-04-16T07:47:59.755Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/11/建立Hexo-Github的个人博客步骤/","excerpt":"","categories":[{"name":"Skill","slug":"Skill","permalink":"http://www.microyue.com/categories/Skill/"},{"name":"Hexo","slug":"Skill/Hexo","permalink":"http://www.microyue.com/categories/Skill/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.microyue.com/tags/Hexo/"}]},{"title":"Notes for Udacity class","subtitle":"Introduction to CNN","date":"2019-04-10T14:24:41.000Z","path":"2019/04/10/Notes-for-Udacity-class/","text":"准备工具Pycharm、Cuda、Navid Driver、Anaconda网络详解CNN网络CNN嗲放 &gt;&gt;过程函数&gt;&gt;&gt;MAXPOOL&gt;&gt;&gt;Conven网络比较代码测试结果&gt;优化反思1.在传送门传送门 应用？ 代码附录 听说中间是分割线？123int main(void)&#123; while ;&#125; xieti?bond?xieti?bond?dfj","raw":"---\ntitle: Notes for Udacity class\nsubtitle: \"Introduction to CNN\"\ndate: 2019-04-10 22:24:41\ntags:\n - Machine Learning\n - CNN\n - Ucadity\ncategories:\n - [Study, Machine Learning]\nabstract: 学习记录，包括CNN基本网络构架和启用GPU中遇到的问题\n---\n# 准备工具\n## Pycharm、Cuda、Navid Driver、Anaconda\n# 网络详解\n## CNN网络\n### CNN\n\t嗲放\n### >>过程函数\n#### >>>MAXPOOL\n#### >>>Conven\n## 网络比较\n# 代码\n## 测试结果\n## >优化\n## 反思\n### 1.在\n#### 传送门\n# [传送门](https://classroom.udacity.com/courses/ud187)\n> 应用？\n# 代码附录\n---\n听说中间是分割线？\n---\n```C\nint main(void){\n\twhile ;\n}\n```\n*xieti?*\n_bond?_\n**xieti?**\n__bond?__\n____dfj____\n","content":"<h1 id=\"准备工具\"><a href=\"#准备工具\" class=\"headerlink\" title=\"准备工具\"></a>准备工具</h1><h2 id=\"Pycharm、Cuda、Navid-Driver、Anaconda\"><a href=\"#Pycharm、Cuda、Navid-Driver、Anaconda\" class=\"headerlink\" title=\"Pycharm、Cuda、Navid Driver、Anaconda\"></a>Pycharm、Cuda、Navid Driver、Anaconda</h2><h1 id=\"网络详解\"><a href=\"#网络详解\" class=\"headerlink\" title=\"网络详解\"></a>网络详解</h1><h2 id=\"CNN网络\"><a href=\"#CNN网络\" class=\"headerlink\" title=\"CNN网络\"></a>CNN网络</h2><h3 id=\"CNN\"><a href=\"#CNN\" class=\"headerlink\" title=\"CNN\"></a>CNN</h3><pre><code>嗲放\n</code></pre><h3 id=\"gt-gt-过程函数\"><a href=\"#gt-gt-过程函数\" class=\"headerlink\" title=\"&gt;&gt;过程函数\"></a>&gt;&gt;过程函数</h3><h4 id=\"gt-gt-gt-MAXPOOL\"><a href=\"#gt-gt-gt-MAXPOOL\" class=\"headerlink\" title=\"&gt;&gt;&gt;MAXPOOL\"></a>&gt;&gt;&gt;MAXPOOL</h4><h4 id=\"gt-gt-gt-Conven\"><a href=\"#gt-gt-gt-Conven\" class=\"headerlink\" title=\"&gt;&gt;&gt;Conven\"></a>&gt;&gt;&gt;Conven</h4><h2 id=\"网络比较\"><a href=\"#网络比较\" class=\"headerlink\" title=\"网络比较\"></a>网络比较</h2><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h2><h2 id=\"gt-优化\"><a href=\"#gt-优化\" class=\"headerlink\" title=\"&gt;优化\"></a>&gt;优化</h2><h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><h3 id=\"1-在\"><a href=\"#1-在\" class=\"headerlink\" title=\"1.在\"></a>1.在</h3><h4 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h4><h1 id=\"传送门-1\"><a href=\"#传送门-1\" class=\"headerlink\" title=\"传送门\"></a><a href=\"https://classroom.udacity.com/courses/ud187\" target=\"_blank\" rel=\"noopener\">传送门</a></h1><blockquote>\n<p>应用？</p>\n</blockquote>\n<h1 id=\"代码附录\"><a href=\"#代码附录\" class=\"headerlink\" title=\"代码附录\"></a>代码附录</h1><hr>\n<h2 id=\"听说中间是分割线？\"><a href=\"#听说中间是分割线？\" class=\"headerlink\" title=\"听说中间是分割线？\"></a>听说中间是分割线？</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>xieti?</em><br><em>bond?</em><br><strong>xieti?</strong><br><strong>bond?</strong><br><strong><strong>dfj</strong></strong></p>\n","slug":"Notes-for-Udacity-class","updated":"2019-04-10T15:07:03.411Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/10/Notes-for-Udacity-class/","excerpt":"","categories":[{"name":"Study","slug":"Study","permalink":"http://www.microyue.com/categories/Study/"},{"name":"Machine Learning","slug":"Study/Machine-Learning","permalink":"http://www.microyue.com/categories/Study/Machine-Learning/"}],"tags":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.microyue.com/tags/Machine-Learning/"},{"name":"CNN","slug":"CNN","permalink":"http://www.microyue.com/tags/CNN/"},{"name":"Ucadity","slug":"Ucadity","permalink":"http://www.microyue.com/tags/Ucadity/"}]},{"title":"introduction","date":"2019-04-10T13:32:28.000Z","path":"2019/04/10/introduction/","text":"","raw":"---\ntitle: introduction\ndate: 2019-04-10 21:32:28\nabstract: 简介\ntags:\n - others\ncategories: \n - [Others]\n---\n","content":"","slug":"introduction","updated":"2019-04-10T14:35:03.244Z","comments":true,"link":"","permalink":"http://www.microyue.com/2019/04/10/introduction/","excerpt":"","categories":[{"name":"Others","slug":"Others","permalink":"http://www.microyue.com/categories/Others/"}],"tags":[{"name":"others","slug":"others","permalink":"http://www.microyue.com/tags/others/"}]}]}