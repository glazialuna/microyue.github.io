{"pages":[],"posts":[{"title":"Notes for Reinforcement Learning","text":"Reinforcement Learning: An IntroductionSecond edition, in progress ， 完全没开始写。","link":"/63f7c9e0.html"},{"title":"Thompson Sampling","text":"prefixMulti-Armed BanditDescription&ensp;&ensp;数据不充足的问题，例如，你有四台老虎机，不知道输赢的概率，选择一个最大的概率。naive的方法是大数定义，对一台机器尝试很多次得出大概的概率，显然这个是不现实的爆炸计算量。 Bernoulli multi-armed bandit: 对一个元祖 {$A$ , $K$} K 机器， reward 概率 { $\\theta_1$, … , $\\theta_{K}$ } 每一个action a， 选择一个machine，并得到一个reward r $A$ ，一串actions，有$Q(a)=E[r|a]=\\theta$. 当$a_t$在step t选择i机器时，$Q(a_t)=E[r|a]=\\theta_i$ $R$是reward function， 在伯努利强盗方程中用随机的方式观察得到reward. 在step t中，$r_t=R(a_t)$可能返回1或0，在可能性$Q(a_t)$下. 在最简单的马尔可夫链中，没有state S， 那么我们就是要得到$max\\sum^T_{t=1}{r_t}$ 最佳的reward probability $\\theta^$ for action $a^$是： loss function Bandit strategy No exploration: Exploration randomly Exploration smartly with preference to uncertainty methodAppendix knowledgebeta 分布 &ensp;&ensp;$\\beta$分布是一个定义在[0,1]区间上的连续概率分布族，它有两个正值参数，[]称为形状参数，一般用α和β表示，Beta分布的概率密度函数形式如下： PDF（probability density function） &ensp;&ensp;对于连续随机变量X，它在区间[a, b]的概率为： $$P(a\\leq X \\leq b)=\\int_a^b{f_X(x)dx}$$ &ensp;&ensp;合理的我们得到PDF的两个必要条件： $f_X(x)\\geq0$ $\\int_{-\\infty}^{\\infty}{f_X(x)dx}=1$ &ensp;&ensp;参考csdn文章[^3] reference[^1]: Blog for Tompson Sampling[^2]: A Tutorial on Thompson Sampling[^3]: PDFs","link":"/556effd8.html"},{"title":"Deep exploration via randomized value","text":"Randomized Value Function 对于tuple {$S$ , $A$ , $R$ , $P$ , $\\rho$} Deep ExplorationexampledescriptionAlgorithmValue Function Learning&ensp;&ensp;总体的框架，学习计算value Function 主要有three steps act： 选择actions，ex，greedy update： learn : update value estimate Least-square value iteration&ensp;&Ensp;LSVI , 寻找一个 H time period，获取一个$Q^*$ 主要函数 vi（value iteration）： full knowledge learn lsvi：loss function : observed data may use $\\epsilon$-greedy or Boltzmann discussion in Section 4 prove: randomly perturbing 无法实现深度搜索（差异在 exp级别，所以增加 randomized value function Randomoized least-squares value iteration&ensp;&Ensp; Code analysisProvereferen Deep exploration via randomized value","link":"/d34b41ad.html"},{"title":"统计知识汇总","text":"prefix统计置信区间&ensp;&ensp;在统计学中，对于一个未知量的估计，总能找到一种量化其置信度的方法。最普遍的分布正态分布（或曰高斯分布） $N(\\mu,\\delta)$ ，其中的 $\\mu$ 就是估计量的期望，而$\\delta$ 则表示其不确定性（ $\\delta$越大则表示越不可信）。比如你掷一个标准的6面色子，它的平均值是3.5，而如果你只掷一次，比如说到2，那你对平均值的估计只能是2，但是这个置信度应该很低，我们可以知道，这个色子的预估平均值是2，而以95%的置信区间在[1.4,5.2]。&ensp;&ensp;置信区间将点估计转化成区间估计，举例说明。对于分布$XN(\\mu,\\sigma)$,已知$\\sigma$,估计$\\mu$。对于一堆采样结果，样本大小为n，样本均值为$$M=\\frac{X_1+X_2+···+X_n}{n}$$根据大数定律和中心极限定律，M服从$M\\mathop{}N(\\mu,\\frac{\\sigma^2}{n})$ 高斯噪声subgaussian&ensp;&ensp; 回归算法&ensp;&ensp;线性回归:$$\\hat{\\theta}=\\mathop{argmin}\\limits_{\\theta}(\\sum_{s=1}^t{(r_t-\\theta^TA_t)^2+||\\theta||_2^2})$$&ensp;&ensp;这一部分也被叫做ridge regression，其中第一部分$\\sum$是最小二乘法，第二部分是正则化。正则化的目的是为了避免过拟合，举例说明：&ensp;&ensp;&ensp;&ensp;对多个点{($x_1,y_1$), ··· ,($x_n,y_n$)}做拟合，得到$y=a_1+a_2x$, 如果参数为多维的，$a_1,a_2, ··· ，a_n$,那么就可能过拟合曲线，为了限制这种情况增加一个正则项，使得控制每一个维度的参数限制。 分布： 高斯分布 正态分布 卡方分布 gama函数 拉普拉斯先验 (MLE、MAP、Bayes)[https://blog.csdn.net/bitcarmanlee/article/details/81417151] AppendixA-1(范式规则化问题) &Ensp;&Ensp;范式 &Ensp;&Ensp;参考笔记[^2] A-1 A-2(估计方法) &Ensp;&Ensp;先验概率、最大似然估计、贝叶斯估计、最大后验概率这几个是概率论的基础知识，小王非常后悔没有认真学习的概率论的课程，真的非常后悔，导致现在要重新学一遍，希望这是最后一次出现在appendix里面了吧。ORZ········· ### 先验概率 &Ensp;&Ensp;先验概率（prior probability）是指根据以往经验和分析得到的概率，如全概率公式，它往往作为\"由因求果\"问题中的\"因\"出现的概率。一般分为客观先验概率(利用过去历史资料计算得到的先验概率) 和 主观先验概率(当历史资料无从取得或资料不完全时，凭人们的主观经验来判断而得到的先验概率)。 &Ensp;&Ensp; 先验概率是通过古典概率模型加以定义的，故又称为古典概率。古典概率模型要求满足两个条件： (1)试验的所有可能结果是有限的; (2)每一种可能结果出现的可能性(概率)相等。 若所有可能结果的总数为N，随机事件A包括n个可能结果，那么随机事件A出现的概率为n/N。 &Ensp;&Ensp; 在贝叶斯统计中，先验概率分布，即关于某个变量 p 的概率分布，是在获得某些信息或者依据前，对 p 的不确定性进行猜测。例如， p 可以是抢火车票开始时，抢到某一车次的概率。这是对不确定性（而不是随机性）赋予一个量化的数值的表征，这个量化数值可以是一个参数，或者是一个潜在的变量。 &ensp;&ensp;先验概率仅仅依赖于主观上的经验估计，也就是事先根据已有的知识的推断，在应用贝叶斯理论时，通常将先验概率乘以似然函数（likelihoodfunction）再归一化后，得到后验概率分布，后验概率分布即在已知给定的数据后，对不确定性的条件分布。 MLE(maximum likelihood estimation)，最大似然估计&ensp;&Ensp;最大似然估计提供了一种给定观察数据来评估模型参数的方法，即：“模型已定，参数未知”。简单而言，假设我们要统计全国人口的身高，首先假设这个身高服从服从正态分布，但是该分布的均值与方差未知。我们没有人力与物力去统计全国每个人的身高，但是可以通过采样，获取部分人的身高，然后通过最大似然估计来获取上述假设中的正态分布的均值与方差。最大似然估计中采样需满足一个很重要的假设，就是所有的采样都是独立同分布的。&ensp;&Ensp;给定一个概率分布 {\\displaystyle D} D，已知其概率密度函数（连续分布）或概率质量函数（离散分布）为 {\\displaystyle f_{D}} f_D，以及一个分布参数 {\\displaystyle \\theta } \\theta ，我们可以从这个分布中抽出一个具有 {\\displaystyle n} n个值的采样 {\\displaystyle X_{1},X_{2},\\ldots ,X_{n}} X_1, X_2,\\ldots, X_n，利用 {\\displaystyle f_{D}} f_D计算出其似然函数：&ensp;&Ensp;具体描述一下最大似然估计：&ensp;&Ensp;首先，假设为独立同分布的采样，θ为模型参数,f为我们所使用的模型，遵循我们上述的独立同分布假设。参数为θ的模型f产生上述采样可表示为 &ensp;&ensp;wiki 最大似然估计 贝叶斯估计MAP(Maximum a posteriori estimation),最大后验概率&Ensp;&Ensp;参考笔记[^3]，基本等于转载这篇笔记。 reference[^1]: Bayesian lasso[^2]: ML中的范数规则化[^3]: 先验概率，最大似然估计，贝叶斯估计，和最大后验概率","link":"/3c5496a6.html"},{"title":"Paper List","text":"Paper list of CVPR NIPs AI Conference deadlines and previous accept list AI deadlines CVPR 2019 CVPR 2018 CVPR 2017 CVPR 2016 CVPR 2015 CVPR 2014 CVPR ACM SIGGRAPH 2019 SIGGRAPH 2018 SIGGRAPH 2017 SIGGRAPH 2016 SIGGRAPH ICMLECCVICCVNips 2019 Nips accept ACMLMy reading ListBanditFeatures AdjustRobustness","link":"/26cd82ff.html"},{"title":"Context Bandit with Linear Payoff Functions","text":"prefix&ensp;&ensp;LinUCB是在UCB基础上的改进，这里我们认为reward=$x_{a,t}\\theta^T$,然后通过结果不断学习这个$\\theta$。简单来说就是在每一步中，我们通过每一轮的所有结果来拟合回归得到最接近$\\theta$的值。 数学表达&ensp;&ensp;抽象过程（可以参考推荐系统，多臂老虎机问题等）到数学表达，$r_{a,t}$是选择action $a$在round $t$的回报，我们定义每一轮的回报是：$$r_{a,t}=x_{t,a}^T\\theta^{*}+\\epsilon_{t}$$ &ensp;&ensp;其中 $\\epsilon_t$ 是实际观测中的噪声，$\\theta^{*}$ 的定义为：$$E(r_{t,a}|x_{t,a})=x_{t,a}^T\\theta^{*}$$&ensp;&ensp;我们的目的是经历$t$轮后，使得获得的reward最大,由此我们定义regret为比较结果：$$Regret=\\sum_{t=1}^{T}{r_{t,a_t}^*}-\\sum_{t=1}^{T}{r_{t,a_t}}$$ &ensp;&ensp;为了简化计算过程，我们定义在每一轮我们会观测到$x_{t,a}$,我们将它和k种选择一起map到$X_t$,即$x_{t,a}-f_t$。这一步的意义是让获得的feature与选择和观测context有关，而学习的过程只和feature有关。 算法过程算法过程&ensp;&ensp;我们用最小二乘法来估计$\\theta_t$，并增加一个置信区间的估计。&ensp;&ensp;首先使得$\\hat{\\theta}$为:$$\\hat{\\theta}=\\mathop{argmin}\\limits_{\\theta}{\\sum_{s=1}^{t}{(r_s-\\theta^TX_s)}^2+\\lambda\\left|\\theta\\right|^2}$$&ensp;&ensp;这里前面的量就是最小二乘法，后面正则化是为了将这个回归的解唯一，也就是防止过拟合。通过运算可以得到$\\theta$的解为(推导过程见s-1)：$$\\hat{\\theta}=A^{-1}b$$&ensp;&ensp;其中$A=\\lambda I+\\sum_{s=1}^{t}{X_t^TX_t}$, $b=\\sum_{s=1}^{t}{r_tX_T}$&ensp;&ensp;由于只能从历史数据中得到预估，和真实的数据有一定的差距，所以要增加一个置信区间，即使得预估值和真实值之间的举例在一个范围内（推导过程见s-2）:$$p\\left(|x_j^T\\theta_j-E(r|x_j)|\\leq\\alpha\\sqrt{x_j^T(D_j^TD_j+I)^{-1}x_j}\\right)\\geq1-\\delta$$&ensp;&ensp;我们用这个值来逐渐学习到$\\theta^{*}$ s-1 &ensp;&ensp;$\\theta$的解： s-2 &ensp;&ensp; UCB的基础是Hoeffding's inequality[^4],定义如下： 假设$X_1$,$X_2$,···,$X_n$是同一个分布产生的$n$个独立变量，其均值为$\\overline{X}=\\cfrac{1}{n}\\sum_{i=1}^nX_i$,则如下公式成立:$$p(|E[X]-\\overline{X}|\\leq\\delta)\\geq1-2\\exp^{-2n\\delta^2}$$ &ensp;&ensp;也就是表示n个独立同分布的变量的均值与该变量的真实期望的误差小于某个预设的阈值$\\mu$会以概率$1-2\\exp^{-2n\\mu^2}$恒成立&ensp;&ensp;那么从我们的问题意义上来看，我们可以将$X_1$,$X_2$,···,$X_n$看作某个action在n次实验中获得的收益，通过上面的不等式并设定一个$\\delta$使得公式成立，然后用$\\hat{X}+\\delta$来近似真实的收益，$E(X)$，理论上也可以用$\\hat{X}+\\delta$。&ensp;&ensp;在UCB中推导出的Hoeffding’s inequality（细致内容见hoeffding）不能够直接应用到LinUCB中，关于linear UCB的bound的推导在09年论文[^3]中有详细介绍，具体证明看alpha的证明。最终的表达形式如下： $$p\\left(|x_j^T\\theta_j-E(r|x_j)|\\leq\\alpha\\sqrt{x_j^T(D_j^TD_j+I)^{-1}x_j}\\right)\\geq1-\\delta$$ &ensp;&ensp;即对于某一个action，前面观察出来的所有次数的平均值计算出来的期望和实际的期望相差小于$\\alpha\\sqrt{x_j^T(D_j^TD_j+I)^{-1}x_j}$的概率大于$1-\\delta$，我们用$x_j^T\\theta_j+\\alpha\\sqrt{x_j^T(D_j^TD_j+I)^{-1}x_j}$来作为真实的值。其中$D_j$为被观察m次的特征为d维度组成的矩阵，则$D_j$为${m}\\times{d}$维。 s-3 &ensp;&ensp;多维分布 s-4 &ensp;&ensp;$\\alpha$的证明过程： s-5 &ensp;&ensp;Hoeffding不等式[^5],适用于有界的随机变量。设有两两独立的一系列随机变量$X_1$,$X_2$,···,$X_n$。假设对所有的$1\\leq i \\leq n$,$X_i$都是几乎有界的变量 代码实现&ensp;&ensp;摘自2011 Yohoo！[^1]的论文算法&ensp;&ensp;主要流程就是这样，没有改动，其中有几个小细节的变动。 在生成context的时候，我们让context服从分布$X\\sim(\\left[\\begin{matrix}1 \\\\ \\vdots \\\\1 \\end{matrix}\\right]_p,I_p)$,其中p为X的维数，关于这个分布的具体含义见s-3。 在map函数我们简单处理成为，对于得到的context$X_t$,我们有k种选择，为了体现选择和context的不同（这里可以理解为，context是用户，选择是用户的喜好，每一个用户我们有不同的map特征，map就是将用户和衡量用户的各种方式结合成为一个feature），我们将它们map到k个feature上，将feature定义为1（kp）维，第i个feature的第（（i-1）p,ip）位就是context的值，其他为0。 在计算regret的时候，我们定义$$Regret(T)=\\sum\\limits_{s=0}^t{\\max\\limits_aX_{a,s}^T\\theta^{*}-X_{a,s}^T\\theta^{*}}$$ LinUCB加上plot代码 结果&ensp;&ensp;通过plot得到函数的效果如下图: &ensp;&ensp;上图的参数分别为（k=3, p=5, $\\delta=0.1$, T=2000, run=100, noise$\\sim Gausin(0,1)$,）,第一图为100个run分别的曲线，第二图为100个run平均的曲线。 &ensp;&ensp;之后考虑增加delay reward obeservation，具体见我的其他blog（懒人不放链接.jpg)哈哈哈哈哈。 推论证明&ensp;&ensp;最后结果满足$regret(T)=O(\\sqrt{T})$ reference[^1]: Context Bandit with Linear Payoff Functions[^2]: WULC的解释[^3]: 09年论文-Exploring compact reinforcement-learning representations with linear regression[^4]: Hoeffding’s inequality[^5]: Wassily Hoeffding论文，1963","link":"/f83eb140.html"},{"title":"CLAN (UPA)","text":"Please enter the password to read the blog. Incorrect Password! No content to display! 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","link":"/9200be6a.html"},{"title":"Contextual Bandits方法","text":"问题描述&ensp;&ensp;Contextual的问题，可以认为是老虎机问题，对于n台老虎机，每一台拥有a个选择，每台老虎机的特定选择的胜率（在统计意义上）是一定的，但是用户不知道这个胜率，且每一轮只能选择一个以后得到一个回报。所以我们要选择一种方式，使得胜率最大。&ensp;&ensp;解决这个问题最naive的方法是对每台老虎机的每个选择尝试许多次（$t$）来预估每种选择的胜率，但是这样子的计算量将会是${t^{a}}^n$次的增长。&ensp;&ensp;这个问题的主要重点在于Exploitation-Exploration（E&amp;E），对于老虎机的选择，我们要考虑从已经选择尝试过的结果中预估选择最大概率的胜率，还是从没有选择的老虎机中选择一个概率最大的尝试。对已知的吐钱概率比较高的老虎机，应该更多的去尝试(exploitation)，以便获得一定的累计收益；对未知的或尝试次数较少的老虎机，还要分配一定的尝试机会（exploration），以免错失收益更高的选择，但同时较多的探索也意味着较高的风险（机会成本）。&ensp;&ensp;Bandit算法是一类用来实现Exploitation-Exploration机制的策略。根据是否考虑上下文特征，Bandit算法分为context-free bandit和contextual bandit两大类。 Contextual-free$\\epsilon$-greedyUCB&ensp;&ensp;UCB主要就是对于reward的估计，选择reward均值估计的置信区间上限老表示其对收益的估计:$$\\hat{\\mu}+\\sqrt{\\frac{2\\ln{n}}{n_i}}$$ softmax$\\epsilon$-greedy&ensp;&ensp;在纯greedy的情况上加上一定概率的uniform exploration Thompson SamplingContexutal-banditLinUCB&ensp;&ensp;UCB方法是解决Bernoulli Bandit问题的，即每个arm的优劣符合伯努利分布，更具历史计算的$\\overline{x_j}$得到分布参数。这是基于统计方法比较简单，但是同时忽略了arm优劣分布和情景的关系。区别于Bernoulli Bandit，就是利用了上下文信息的Contextual Bandit 问题。&ensp;&ensp;LinUCB没有定义一个概率分布来描述每个arm的历史收益情况，而是假设了arm的优劣和描述arm的特征向量存在一个线性关系：$x^T\\theta$,来替代$\\overline{x_j}$ AppenddixBernoulli Bandit &ensp;&ensp;贝叶斯和非贝叶斯情况 context regresarion Bernoulli Bandit reference[^1]: 知乎 Bandit算法","link":"/c8d7f3a3.html"},{"title":"Bayesian lasso UCB method","text":"prefixAppendixA-1(范式规则化问题) &Ensp;&Ensp;范式 &Ensp;&Ensp;参考笔记[^2] A-1 A-2(估计方法) &Ensp;&Ensp;先验概率、最大似然估计、贝叶斯估计、最大后验概率这几个是概率论的基础知识，小王非常后悔没有认真学习的概率论的课程，真的非常后悔，导致现在要重新学一遍，希望这是最后一次出现在appendix里面了吧。ORZ········· ### 先验概率 &Ensp;&Ensp;先验概率（prior probability）是指根据以往经验和分析得到的概率，如全概率公式，它往往作为\"由因求果\"问题中的\"因\"出现的概率。一般分为客观先验概率(利用过去历史资料计算得到的先验概率) 和 主观先验概率(当历史资料无从取得或资料不完全时，凭人们的主观经验来判断而得到的先验概率)。 &Ensp;&Ensp; 先验概率是通过古典概率模型加以定义的，故又称为古典概率。古典概率模型要求满足两个条件： (1)试验的所有可能结果是有限的; (2)每一种可能结果出现的可能性(概率)相等。 若所有可能结果的总数为N，随机事件A包括n个可能结果，那么随机事件A出现的概率为n/N。 &Ensp;&Ensp; 在贝叶斯统计中，先验概率分布，即关于某个变量 p 的概率分布，是在获得某些信息或者依据前，对 p 的不确定性进行猜测。例如， p 可以是抢火车票开始时，抢到某一车次的概率。这是对不确定性（而不是随机性）赋予一个量化的数值的表征，这个量化数值可以是一个参数，或者是一个潜在的变量。 &ensp;&ensp;先验概率仅仅依赖于主观上的经验估计，也就是事先根据已有的知识的推断，在应用贝叶斯理论时，通常将先验概率乘以似然函数（likelihoodfunction）再归一化后，得到后验概率分布，后验概率分布即在已知给定的数据后，对不确定性的条件分布。 MLE(maximum likelihood estimation)，最大似然估计&ensp;&Ensp;最大似然估计提供了一种给定观察数据来评估模型参数的方法，即：“模型已定，参数未知”。简单而言，假设我们要统计全国人口的身高，首先假设这个身高服从服从正态分布，但是该分布的均值与方差未知。我们没有人力与物力去统计全国每个人的身高，但是可以通过采样，获取部分人的身高，然后通过最大似然估计来获取上述假设中的正态分布的均值与方差。最大似然估计中采样需满足一个很重要的假设，就是所有的采样都是独立同分布的。&ensp;&Ensp;给定一个概率分布 {\\displaystyle D} D，已知其概率密度函数（连续分布）或概率质量函数（离散分布）为 {\\displaystyle f_{D}} f_D，以及一个分布参数 {\\displaystyle \\theta } \\theta ，我们可以从这个分布中抽出一个具有 {\\displaystyle n} n个值的采样 {\\displaystyle X_{1},X_{2},\\ldots ,X_{n}} X_1, X_2,\\ldots, X_n，利用 {\\displaystyle f_{D}} f_D计算出其似然函数：&ensp;&Ensp;具体描述一下最大似然估计：&ensp;&Ensp;首先，假设为独立同分布的采样，θ为模型参数,f为我们所使用的模型，遵循我们上述的独立同分布假设。参数为θ的模型f产生上述采样可表示为 &ensp;&ensp;wiki 最大似然估计 贝叶斯估计MAP(Maximum a posteriori estimation),最大后验概率&Ensp;&Ensp;参考笔记[^3]，基本等于转载这篇笔记。 reference[^1]: Bayesian lasso[^2]: ML中的范数规则化[^3]: 先验概率，最大似然估计，贝叶斯估计，和最大后验概率","link":"/3c5496a6.html"},{"title":"Fusion","text":"Please enter the password to read the blog. Incorrect Password! No content to display! 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","link":"/2f12e387.html"},{"title":"Deeplab v1,v2,v3,v3+","text":"Please enter the password to read the blog. Incorrect Password! No content to display! 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","link":"/1f233a0a.html"},{"title":"Notes for 沟通技巧","text":"line 个人观点表达 团队有效沟通 文献检索阅读 技术文档写作 演示方法 个人观点表达 说服原则（4) 说什么：全局、要点、举例、总结 为什么听：了解听众、关注点、好奇心、扣点 文贵简：主题、提要 互动 说服技巧（3） 讲故事 友好、不争辩 独特 提问（5） 准备：上网、FAQ、说明书、尝试 找对人：论坛 说对话：细节+尝试、标题（问题对象-问题）、代码+注释+排版、重现问题方法 代码（测试样本、审核关注、解决） 提问：谦逊、几个小时、基础、无意义疑问、不紧急 解决：标题+描述+方案（状态、方法、步骤、帮助者） 误解（2） “透明度错觉”：自动脑补、主客差异 被动：清晰直白、不厌其烦、全神贯注 团队有效沟通 个人品质（7）：需求敏感、直言不讳+意见、抗压性、公平、细节、脚踏实地、责任心强 团队（3）：目标一致、信任、各有所长 沟通总则（4）：尊重不欣赏、长处、对事、听 聆听：hearing、listenging、understanding 协调：兴趣、从善如流、心胸宽阔、吸取意见、妥协 见面：自我介绍（场合时间、活动团队信息）、联系方式（归属感存在感） 团队抉择（3）：求同存异、不投票、契约精神 选择题目：兴趣特长人脉工作量 场地：大桌子、站着、圆桌 开会（5）： 议程：主持人准备、人手一份、提前、包括（上次回顾、议题介绍、汇报人和讨论时间） 主持人：计划、控制范围、引导、时间 流程推进：介绍背景、争议、不同、用心聆听+意见机会 会议纪要：时间、地点、参会人、既要人、丹田群发、记录（总结、决议、责任人、落实时间）、下次计划 总结计划：回顾、陈述决议、责任人和时间、意见下次（计划） 礼仪（5)： 致谢前者 推荐下一位 引用前面伙伴 肢体语言和表情（内外有别） 自己专注（查漏补缺、外人信任） 团队协作工具 （4)沟通记录+查询+引用、时间安排展示、阶段成果传递分享、远程沟通手段 看板：制现场生产流程的工具，对生产的优先顺序能够一目 了然，易于管理 白板： trello：水平化、列表列表 有道云：资料管理、即时通讯、多人在线编辑 文献检索阅读 信息获取、管理、分析能力 搜索引擎 逻辑运算 + @ ￥ # - “ * 。。 文献数据库：付费，加工整理 ACMIEEE Springer WOC VS IEEE/ACM IEEE vs ACM 搜索引擎 vs 数据库 ： 信息源、结果、结果分析、结果输出 文献工具： 困难：阅读、管理pdf（IEE，ACM）、摘要+引用+标题 EverNote：文献目录管理软件包 有道云 为知笔记 有效阅读： 入门：最近高引用，相关工作，综述性文章，参考文献，顶级会议，网站论文集，素材 阅读（） 思路，结论此文是否值得深读 详读并记笔记： 内容解释清楚 可以向别人综述该文的结论和支撑论据 批判性思考：整重构作者的工 真正的创新点和弱点 找出进一步改进的方向 是对某个主题的学术观点和理论方法的整理 ，是批判性的归纳和评论，不是简单堆 文献综述结构 该领域的研究意义 研究背景和发展脉络 目前研究水平、存在问题及可能的原因 进一步研究的课题、发展方向概述 自己的见解和感想 参考文献列表（ 技术文档写作 实习报告 项⽬概况 背景介绍 工作任务及内容 ⼯工作成果及⽔水平 完成了了哪些任务 ⼯工作中的难点有哪些，如何解决的（技术含量量） 项⽬目收获 技术⽅方⾯面的收获 其他⽅方⾯面的收获 ⼯工作建议 开题报告 项⽬概况 背景介绍 工作任务及内容 毕业论文 演示方法 PPT制作-内容：让别⼈人了了解你的思想 逻辑思路（大纲） 页面结构 要点1：主次分明 要点2：善⽤用模板，但是简洁 ：标题位置醒⽬目 列列表排版⼀一致 每⻚页展示的概念不不要超过7个 内容越少，提供的视觉信息就越直观 要点3：善⽤用图⽚片、慎⽤用图⽚片： 画⾯面布局影响阅读次序与重点判断 适当留留⽩白可以减缓⼼心理理压⼒力力 少数的⼈人可能对图⽚片会有负⾯面解读 色彩字体 冷色：不不引⼈人注意，适 合作为主题内容 的背景 暖面：有扑⾯面⽽而来的效 果，适合作为前 景⽂文字 高对比度： 当背景光线强（如教室、⼤大会议室）时，浅⾊色 背景是安全的选择 整体不不要超过3种⾊色系 图⽚片元素简单少变化 图⽚片元素简单少变化 ⼀一般认为宋体严谨，适合正⽂文；⿊黑体庄重，适 合标题 最好⽤用同⼀一种字体 动画图表 动画必须有明确的⽬目的 过渡 • 强调 • 简化 • 重现 图⽚片的作⽤用 美观 视觉刺激 加强解释 加深记忆 PPT制作-样式 PPT制作-格式 简报： 材料 听众⽬目标正确 精简（⼤大多数简报应该删除50%以上的内 容 提⾼高说故事的能⼒力力 ⼀一份简报内容量量约为书的⼀一章 结构 采⽤用链状（⾮非树状）组织⽅方式 注意每章投影⽚片的修辞属性与⽐比例例 移除⼤大纲，改⽤用总结 修饰 评价 week2：视频质量、表达质量、参与度、书面议程纪要 week7： ⻚页⾯面布局、⾊色彩搭配、动画、其他细节 |||| 内容设计、流程控制、仪态及肢体语⾔言 ||||| 参与度 上课讨论 写（特长、分工、时间计划） 搜索人名、论文","link":"/1f605849.html"},{"title":"IS复习笔记","text":"Preface The Information security class taught by htl. A sad story: 没复习多久，学的很不扎实的课程 Reviews![course outline](\\photos\\IS\\course outline.jpg) Computer Securitybegincase 1: hackers intention : thrill, moneycase 2: tech helps insiders an insider:legitimate access, increased opportunity,a clearly defined motive. Flat world: distributed nature,companiescase 3:Hidden Facts not report for lower loss historyhistory(omit)太公兵法、豪密、Scytale Cipher、Phaistos Disc、Caesar cipher、Steganography The four evolutions and landmark event The first evolution: Kerckhoff Principle: A cryptosystem should be secure even if everything about the system, except the key, is public knowledge.——was stated by Auguste Kerckhoffs in 1883 Enhance the Safety Makes the mass production of cipher machines possible The second evolution: Computers enigma DES The third evolution: Public key ciphers RSA The fourth evolution: The Internet? Mobi-Internet? concepts of computer securityCharacteristics of computer security(special) Comprehensiveness、Procedural、Dynamic、Hierarchy、Relativity Three elements of computer security Confidentiality—— can others see your data? Integrity（完整性）—— can your data be illegally changed? Availability—— will the resource be accessible? 4‘ Authenticity—— proof of identity Concepts of Computer Security:vulnerabilities, threats, attacks and control Vulnerabilities(缺陷):Is a weakness in the security system Threats:Is set of circumstances that has the potential to cause loss of harm Attacks:A human or another system can exploit vulnerabilities to initiates an attack Control:Is an action, device, procedure, or technique that removes or reduces the vulnerabilities Ways of computer attack and its classifierways ![security attacks](\\photos\\IS\\attack ways.jpg) Interruption：Availability Interception：Confidentiality Modification：Integrity Fabrication：Authenticity classifiers Passive Attacks:Interception Difficult to detect —— Prevention is more effective than detection. Active Attacks:Interruption, Modification and Fabrication Easy to detect, difficult to prevent, can be from damage Replay,DOS Against security threat security system security services security mechanisms:Authentication,Access control,Data Confidentiality,Data Integrity, Non-Repudiation,• Availability operational :Cost-Benefit Analysis,Risk Analysis,Laws and Customs human issues:main Cryptographypart 1:Fundamentals of Cryptography Terminology:P,C,E(),D(),Key(Key,K),C=Ek(P),P=Dk(C) Encryption Algorithm:Substitution and transposition part 2: Age of Cryptography 1:The Vigenère Square(details int assignment) 2:machine:Enigma(waiting for ) 3:computer age part 3:Computer agesSymmetric Key /Secret key CryptographyFundamentals and modelFeistel cipher structure and DES cryptographyBlock Cipher Feistel cipher structure Difussion :interchange Confusion:round function block size:128 /64 des key length:16 /56 des avalanche effect des 3 168 key IDEA blowfish RC5 AES 128 128/192/256Existing problems of Symmetric/Secret Key Cryptography Asymmetric Key CryptographyFundamentals and modelDH Algorithm:Methods and issues RSA Algorithm:MethodsCompare &amp; CombinationApplication Modepart 4: digital signatureAuthorization and Access Controldigital signatures#### one-way hash algorithmConceptsMD5-128,SHA-1-160attackMACPGP passwordSecure acessconcepts(3)DAC,MAC,RBACcore principlesNetwork SecurityAssignments Analysis Remind that …… for zju sutdents.To avoid easy search I omitted the detailed description of the assignments or write in another way by myself. assignment 1assignment 2assignment 3assignment 4appendix 1.class_materials 2.Cryptography and Network Security: Principles and Practice, Fifth Edition 3.Applied Cryptography: Protocols, Algorithms, and Source Code in C, Second Edition 4.Computer Security: Art and Science ","link":"/311557e2.html"},{"title":"分类器","text":"朴素贝叶斯朴素贝叶斯方法是","link":"/c6825a6a.html"},{"title":"聚类算法","text":"&ensp;&ensp;聚类属于无监督学习，以往的回归、朴素贝叶斯、SVM等都是有类别标签y的，也就是说样例中已经给出了样例的分类。而聚类的样本中却没有给定y，只有特征x，比如假设宇宙中的星星可以表示成三维空间中的点集${x,y,j}$。聚类的目的是找到每个样本x潜在的类别y，并将同类别y的样本x放在一起。比如上面的星星，聚类后结果是一个个星团，星团里面的点相互距离比较近，星团间的星星距离就比较远了。 &ensp;&ensp;在聚类算法中我们有$x^1,x^2,…,x^m$ m个样本点，最后被分为多个类。 k-means算法&ensp;&ensp;k-means算法^1通过不断迭代更新k类质心获取结果，主要流程为下： input:$\\mbox{m个样本}:x^1,x^2,…,x^m$&ensp;&ensp;&ensp;&ensp;&ensp;$\\mbox{k个质心}:\\mu_1,\\mu_2,…\\mu_k$repeat&ensp;&ensp;&ensp;&ensp;$c^i:=\\underset{j}{\\arg\\min} {\\left| {x^i-u_j} \\right|}^2 \\mbox{计算每个样本的类别}$&ensp;&ensp;&ensp;&ensp;$\\mu_j:=\\frac{\\sum_{i=1}^{m}{c^i=j}x^i}{\\sum_{i=1}^{m}{c^i=j}} \\mbox{计算每个类别的质心}$until:$\\mbox{迭代条件}$ &ensp;&ensp;其中，需要保证k-means是收敛的，才能跳出迭代过程。k-means具有特征，完全保证收敛性和局部最优解。 -- 1 : 收敛完整,局部最优 -- &ensp;&ensp;我们定义畸变函数： $$J(c,\\mu)=\\sum_{i=1}^{m}{\\left\\| x^{i}-\\mu_{c^i}\\right\\|}^2$$ &ensp;&ensp;J函数表示每个样本点到其质心的距离平方和。K-means是要将J调整到最小。假设当前J没有达到最小值，那么首先可以固定每个类的质心$\\mu$，调整每个样例的所属的类别$\\c_i$来让J函数减少，同样，固定\\c，调整每个类的质心$\\mu$也可以使J减小。这两个过程就是内循环中使J单调递减的过程。当J递减到最小时，$\\mu$和c也同时收敛。（在理论上，可以有多组不同的$\\mu$和c值能够使得J取得最小值，但这种现象实际上很少见）。 &ensp;&ensp;由于畸变函数J是非凸函数，意味着我们不能保证取得的最小值是全局最小值，也就是说k-means对质心初始位置的选取比较感冒，但一般情况下k-means达到的局部最优已经满足需求。但如果你怕陷入局部最优，那么可以选取不同的初始值跑多遍k-means，然后取其中最小的J对应的$\\mu$和c输出。 -- 2 : k-means和EM的关系 -- &ensp;&ensp;下面累述一下K-means与EM的关系，首先回到初始问题，我们目的是将样本分成k个类，其实说白了就是求每个样例x的隐含类别y，然后利用隐含类别将x归类。 &ensp;&ensp;由于我们事先不知道类别y，那么我们首先可以对每个样例假定一个y吧，但是怎么知道假定的对不对呢？怎么评价假定的好不好呢？我们使用样本的极大似然估计来度量，这里是就是x和y的联合分布P(x,y)了。如果找到的y能够使P(x,y)最大，那么我们找到的y就是样例x的最佳类别了，x顺手就聚类了。 &ensp;&ensp;但是我们第一次指定的y不一定会让P(x,y)最大，而且P(x,y)还依赖于其他未知参数，当然在给定y的情况下，我们可以调整其他参数让P(x,y)最大。但是调整完参数后，我们发现有更好的y可以指定，那么我们重新指定y，然后再计算P(x,y)最大时的参数，反复迭代直至没有更好的y可以指定。 &ensp;&ensp;这个过程有几个难点，第一怎么假定y？是每个样例硬指派一个y还是不同的y有不同的概率，概率如何度量。第二如何估计P(x,y)，P(x,y)还可能依赖很多其他参数，如何调整里面的参数让P(x,y)最大。这些问题在以后的篇章里回答。 &ensp;&ensp;这里只是指出EM的思想，E步就是估计隐含类别y的期望值，M步调整其他参数使得在给定类别y的情况下，极大似然估计P(x,y)能够达到极大值。然后在其他参数确定的情况下，重新估计y，周而复始，直至收敛。 均值漂移聚类 DBSCAN 基于密度聚类GMM 和 EM 凝聚层次聚类 图团体检测","link":"/35f08535.html"},{"title":"Linux | 命令","text":"基础命令服务器 文件交互：SCP 本地发送服务器文件：scp /opt/soft/nginx-0.5.38.tar.gz root@192.168.120.204:/opt/soft/scptest 服务器发送本地文件：scp -r root@192.168.120.204:/opt/soft/mongodb /opt/soft/","link":"/133c0eae.html"},{"title":"Linux | 小手册","text":"基础命令设置环境变量 vi ~/.bashrcsource ~/.bashrc 编辑器&amp;编译器数据库开发工具javajava JDK 是基本的env工具，具体安装过程如下： installation : sudo apt-get install default-jre default-jdk configuration env: vi ~/.bashrc # vim bashrc file export JAVA_HOME=/usr/lib/jvm/default-java # add to environment # add to bashrc ‘source ~/.bashrc # the configuration take effect’ test: echo $JAVA_HOME java -version 测试结果为： 需要注意的是： vim 版本问题解决：sudo apt-get updatesudo apt-get install vim-gtk export 等号前后不能有空格 Hadoop安装分布式Hadoop 3在服务器上 服务器ssh建立服务器联系以网易云为例，建立多个节点的服务器联系。 创建多台服务器和申请ip，绑定主服务器和ip address ssh连接 ssh-keygen -t rsa # genertate key pairs # generate cd ~/.ssh 添加ssh密钥在云服务器上,复制pubkey(本地到hadoop1 主节点，其他增加hadoop11 的pub key) 本地登陆 ssh root@ip_hadoop1, 从hadoop 1 SSH登陆hadoop其他节点 通过配置hosts文件建立直接hostname的连接方式sudo vi /ect/hosts # configure hosts10.173.32.21 hadoop1 # 添加hostname和节点scp -r /etc/hosts root@hadoop2:etc # send to other nodes 传送host到别的节点 刷新hostnamessh-keygen -f &quot;/root/.ssh/known_hosts&quot; -R hadoop2 reference[^1]:fuhanlin’s blog","link":"/dfed39d9.html"},{"title":"Markdown | 小手册","text":"前言&ensp;&ensp;本来想要用wordpress建立博客，偶尔发现了Hexo，以Markdown语言为基础，非常好用。在写博客的过程中很有可能会遇到一些markdown的语言问题，当然这种文本标记语言的显示方式会限制于渲染的工具，所以只能针对Github格式和Hexo（我的主题）格式来看。 文本标记语言&ensp;&ensp;markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。 输入操作 换行Method1：使用br标签 &lt;br&gt;Method2：在句末加上两个空格后换行,这种方法可能会因为其他标记导致顺序混乱，除非大段文本，不然轻易别用。Method3：两个换行号。(虽然尝试不行，但文档里说可以) 首行缩进Method1：使用特殊占位符,_注意后面的分号不能省略_。 &amp;ensp;或者&amp;#8194&ensp;半角字符款式 &amp;emsp;或者&amp;#8195;&emsp;全角字符款式 &amp;nbsp;或者&amp;#160;&nbsp;最小缩进款式Method2：全角输入情况下双击两次空格，转换全角(shift+空格)，暂时没发现能用的方法。 居中Method1:引用html标签&lt;center&gt;str&lt;center&gt;--center-- 编辑操作 字体 大小：5 &lt;font size=&quot;5&quot;&gt;5&lt;/font&gt; 颜色：Red &lt;font color=&quot;Green&quot;&gt;Red&lt;/font&gt; 字体：微软雅黑 &lt;font face=&quot;微软雅黑&quot;&gt;微软雅黑&lt;/font&gt; 加粗：加粗 *加粗* 或者 __加粗__ 倾斜：倾斜 *倾斜* 或者 _倾斜_ 插入文档内引用 html的写法 在要跳转的地方写上：&lt;h3 id=&quot;2&quot;&gt;s-2 $\\sigma$&lt;/h3&gt;。 其中h3是标题的格式，id是跳转的编号，这里主义在hexo中对h3标题的所有设置都会转移过来，等于写了第二个标题 在跳转的目的写上：&lt;a href=&quot;#2&quot;&gt;s-2&lt;/a&gt; markdown脚注 install plugin：npm install hexo-reference --save 这是用于reference的脚注，专门用在hexo的渲染中 在被引用的地方加：引用[^1] 在参考文献前加（统一出现在最后）：[^1]: [参考](source) 数学公式 Markdown语法支持采用LaTex语法写数学公式，而在网页中使用Mathjax插件来显示数学公式。 见latex公式 代码插入代码段''' code ''' 123int main(void){ return 0;} 增加表格markdown语言123| 大写 | 代码 |小写 | 代码 ||:--:|:--:|:--:|:--:||$A$|` $A$ `|$\\alpha$|` $\\alpha$ `| 表现为： 大写 代码 小写 代码 $A$ $A$ $\\alpha$ $\\alpha$ 方法二 html标签 rowspan colspan style=”width: 10px;height:=12;” 实例: 123456789&lt;table&gt; &lt;tr&gt; &lt;td rowspan=&quot;2&quot; style=&quot;width: 10px;&quot;&gt;输入重定向&lt;/td&gt; &lt;td &gt;语法 &lt; input-file&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td &gt;行三列二&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 可以改变表格的宽度、长度、跨行等操作注意html语句中间的换行号会显示在表格前面,解决方法是在html语句前后添加` 和 ` 输入重定向 语法 < input-file 行三列二 md语言快捷键 快捷键的使用显然和编辑器有关，这里bonny使用的是sublime，具体操作见下链接 Sublime md快捷键","link":"/a1a07a57.html"},{"title":"Hexo主题建立","text":"语言工具制作Hexo主题，需要了解 HTML / CSS / JavaScript，此外Hexo还有依赖 模板引擎： Hexo支持 EJS / Jade /Haml / Swig CSS 预处理：SASS / LESS / Stylus 在本文中选用Swig语法文档和Stylus语法文档 Hexo主题要求&emsp;theme主题在./themes/路径之下，一个主题包含结构有： __ config.yml_ ： 主题的配置文件。修改时会自动更新，无需重启服务器。 languages：语言文件夹。[Hexo-语言文档]Hexo-模板文档 layout：布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式。Hexo-模板文档 scripts：脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，这里包含插件信息。Hexo-插件文档 source：资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。 &emsp;可以参考Hexo-主题文档获得更多信息 &emsp;其中layout文件夹中包含的对各个页面的要求文件为：· 首页（index.swig）· 存档页（archive.swig）· 标签文章列表页（tag.swig）· 分类文章列表页（category.swig）· 文章详情（post.swig）· 页面详情（page.swig） 制作属于自己的hexo主题建立自己的theme文件夹现在开始项目之前，我都会搜索一下 yeoman 有没有库，生成 Hexo 主题就有 generator-hexo-theme 。如果还没有安装 yeoman ，那先用 npm 全局安装。接着安装生成器的库： 12npm i -g yonpm i -g generator-hexo-theme 然后到自己的博客目录之下，进入到 themes 目录，创建一个用主题名命名的新文件夹，比如test，进入新文件夹，先设置一下目录的权限，否则 yeoman 会提示权限不足： 1chmod 675 ./ 然后选择一些基本的配置，比如使用什么模板引擎，使用什么 CSS 预编译等，这里分别选择 Swig 和 Stylus。完成之后，主题目录下就会生成一些如下结构的文件： 12345678910111213141516171819├── _config.yml // 主题配置文件├── languages // 多语言文件夹├── layout│ ├── archive.swig // 存档页模板│ ├── category.swig // 分类文章列表页模板│ ├── includes // 各页面共享的模板│ │ ├── layout.swig // 页面布局模板，其它的页面模板都是根据它扩展来的│ │ ├── pagination.swig // 翻页按钮模板│ │ └── recent-posts.swig // 文章列表模板│ ├── index.swig // 首页模板│ ├── page.swig // 页面详情页模板│ ├── post.swig // 文章详情页模板│ └── tag.swig // 标签文章列表页模板└── source ├── css │ └── theme.styl // 主题自定义 CSS 文件 ├── favicon.ico └── js └── theme.js // 主题 JavaScript 文件 赶紧在 Hexo 的主配置文件中使用新主题，到博客根目录下找到 _config.yml 文件，找到theme行，修改如下： 1theme: test Step 2：建立内容没有然后了，你就可以开始建立自己的内容了。一些优化的见我的其他博客。","link":"/2bca125f.html"},{"title":"Python | 小手册","text":"基础命令 PIP pip upgrade： python -m pip install –upgrade pip pip install: pip install XX=xx.xx Conda Ninja install ninja: conda config –add channels conda-forgeconda install ninja –yes 查看cuda版本 win nvcc –versionCuda compilation tools, release 10.1, V10.1.105 查看cudnn版本 win 进入目录C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.1\\include\\cudnn.h查看 #define CUDNN_MAJOR 7#define CUDNN_MINOR 5#define CUDNN_PATCHLEVEL 0本机为7.5.0 各类wheel的后缀区别 check python platform: 64 for amd64, 32 for win32 import platformplatform.architecture()(‘64bit’,’WindowsPE’)exit() Anaconda使用 查看conda所有环境：conda info --env 创建conda环境：conda create --name python35 python=3.5 激活环境：conda activate python35 退出环境：conda deactivate cv2 install conda: conda:`conda install -c https://conda.binstar.org/menpo opencv py2 VS. py3 print htlm -&gt; print(html) import urllib2 –&gt; import urllib.request import urlparse –&gt; import urllib.parse import Queue –&gt; import queue 函数使用 色彩转换： img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) # BGR转灰度 img_bgr = cv2.cvtColor(img_gray, cv2.COLOR_GRAY2BGR) # 灰度转BRG img_rgb = cv2.cvtColor(img_gray, cv2.COLOR_GRAY2RGB) # 灰度转RGB b,g,r = cv2.split(img) #bgr图像分离三个通道 img2 = cv2.merge([r,g,b]) #merge成rgb图像 swig install swig package (win) download unpack zip in a path add path to system variable PATH check : cmd -&gt; swig -version swag pip: pip install swag dlib人脸识别模块 PIP 安装：pip install dlib==19.18(bonny 尝试速度较慢) 自己编译(Python) download from websitedlib face detector bash compile :python setup.py install test:123456cd dlib/testmkdir buildcd buildcmake ..cmake --build . --config Release./dtest --runall Error: You have CUDA installed, but we can't use it unless you put visual studio in 64bit mode.:貌似是VS2017的问题，反正不影响使用可以忽略。 pypylon注意pypylon 只匹配 pylon 5.2.0 (截止2019.10.12) , 安装developer才有sdk包pypylon 是辅助 Basler camera 系列的python API接口 pre: pylon , python , pip ,pyplon install (fron wheel): download wheel(builded) for your system, release install wheel :pip install XXX/X/XX.wheel install (from source) prepare version (swag &gt; 3.0.12 , python &gt; 3.4) install : 123git clone https://github.com/basler/pypylon.gitcd pypylonpip install . build in python : python setup.py develop test: in file tests/ pycocotools官方文档Github repo wondows: pip pip install pycocotools","link":"/63f7c9e0.html"},{"title":"ML | 常用数据库","text":"CITYSCAPES","link":"/89aec4a9.html"},{"title":"Jupter | 小手册","text":"Jupter 安装 Conda：conda install -c conda-forge jupyterlab ipyparallel： Install ipyparallel:pip install ipyparallel To enable the IPython Clusters tab in Jupyter Notebook:ipcluster nbextension enable To install for all users on JupyterHub, as root: jupyter nbextension install --sys-prefix --py ipyparallel jupyter nbextension enable --sys-prefix --py ipyparallel jupyter serverextension enable --sys-prefix --py ipyparallel To use it from Python`import osimport ipyparallel as ipp rc = ipp.Client()ar = rc[:].apply_async(os.getpid)pid_map = ar.get_dict()` reference ipyparallel 的官方文档","link":"/e22800a7.html"},{"title":"Hexo | 小手册(一)","text":"插件插件宝宝们的作用无处不在。都是大神写好的插件，可以直接使用。 增加摘要 一般情况下的摘要可以通过在正文中增加 &lt;!-- more --&gt; ,之前的内容会被认为是摘要，但是如果想要在主页面中显示摘要，正文中不显示，就需要借一个插件来帮助了。 npm install hexo-less –save 使用方法和more一样，在less前面的是摘要。 添加参考 在文章末尾加上reference的文档，是一个非常好用的ref插件 npm install hexo-reference –save 使用方法就是在末尾协商 [^1]: [xx](xx) 在引用的地方引用[^1]即可。 文章加密 文章加密已知有两种方法，启用hexo-blog-encrypt插件，直接在主题文件中撰写。直接撰写，如果是明文放在github上等于没写。 npm install hexo-blog-encrypt 在站点配置文件下加入:encrypt: enable:true 在文章信息头加入: password: 123 更详细信息参照官方文档，有隐藏TOC的方法。 修改Toc可折叠准备 Icarus：我的主题的标签是算在widget里面，并自己生成Table of Calague的。相关文件 \\layout\\widget\\toc.ejs : 定义了Toc生成函数buildToc函数 \\source\\js\\main.js ： 定义了tocmask active的函数 \\source\\css\\style.styl : 定义了toc样式和tocmask的样式 修改建立在Hexo自带的目录生成函数上面。具体可参见Hexo文档（Hexo TOC辅助函数 文档） 修改 修改toc.ejs文件使用自带的生成函数 1&lt;%- toc(post.content, {list_number: true}) %&gt; 在main.js中增加单击折叠的效果 1234567891011121314151617//目录生成及隐藏函数 var $itemHasChild = $(\"#toc .toc-item:has(&gt; .toc-child)\"); var $titleHasChild = $itemHasChild.children(\".toc-link\"); // 默认被隐藏 $titleHasChild.siblings(\".toc-child\").hide(100); //点击大标题 function clickTitle(){ //单击折叠或展开目录 $titleHasChild.click(function(){ if($(this).siblings(\".toc-child\").is(\":hidden\")){ $(this).siblings(\".toc-child\").show(100); }else{ $(this).siblings(\".toc-child\").hide(100); } }) } clickTitle(); 在style.styl中增加目录的格式 12345678910111213141516171819202122232425262728293031323334/*目录设置*/#toc { font-size: 0.9em; line-height: 1.65em; } #toc .toc-title { font-weight: bold; color: #808080; } #toc ol.toc { margin-left: 0; padding: 0.7em; padding-right: 0; } #toc ol.toc li.toc-item { list-style-type: none; } #toc ol.toc li.toc-item:hover { background: none; } #toc ol.toc a.toc-link { color: #808080; } #toc ol.toc a.toc-link:visited { } #toc ol.toc a.toc-link:hover { color: #88acdb; text-decoration: none; background: rgba(158,188,226,0.21); } #toc ol.toc ol.toc-child { padding-left: 1.25em; margin: 4px 0; } 几个坑 widget的隐藏&ensp;&ensp;在Icarus中，widget需要适应整体布局，整体分栏为两栏，先把左边的显示，然后隐藏，再显示右边的widget，所以我写完以后，放在右边，main.js的内容被隐藏。 修改1：widget hide修改 修改2：styl中的toc加上@media Yelee主题参考 SEO优化导航结构Hexo默认的导航结构为permalink: :year/:month/:day/:title/ 这样的结构把点击次数拉的太长，不利于搜索引擎的爬取 推荐方法：abbrlink Step1： 安装hexo-abbrlinknpm install hexo-abbrlink --save Step2：修改permalink1234permalink::abbrlink.htmlabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex #进制： dec（default） and hex 其他方法：修改perlink为title.html 添加站点地图站点地图是一种文件，可以列出博客网站上的网页，从而将网站内容的组织构架告知谷歌以及其他搜索引擎。Googlebot等抓取工具会读取此文件以便抓取 安装插件： generate 后可以在public文件夹中看见baidusitemap.xml 和 sitemap.xml文件 123npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --savehexo g 修改主题配置文件：在主题配置文件中增加 12345sitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xmlurl: http://hunao.info 添加robots.txt在source文件夹中 12345678910111213User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/ Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: http://www.hunao.info/sitemap.xmlSitemap: http://www.hunao.info/baidusitemap.xml 提交站点Google Search ConsoleBaidu站长 先提交站点检验：有很多方法这里选择了html头检验，即在head.ejs中增加 验证完成后需要几天时间才能提取信息 增加sitemap地图 这里有个小坑，www.host/baidusitemap 和 www.host/sitemap.xml 原因不知道 Hexo SEO优化 可能问题及解决办法 在toc渲染时toc失效，检查标题后直接更&gt;语句删除，检查公式拼写正确完整。 在hexo s后没有立即刷新基本有问题，但是不一定报错。 本地渲染无错，上传出错：清除浏览器缓存","link":"/d9d858ab.html"},{"title":"Latex | 小手册","text":"前言&ensp;&ensp; 安装windows下安装工具宏包安装引用 交叉引用 ex：12\\subsection{a}\\label{ref1} # 给被引用的地方一个label\\ref{ref1} # 在引用的地方加入 中文使用 使用CTex 引用宏包:\\usepackage[UTF8]{ctex} 插入图片插入figure figure参数： h 此处（here）t 页顶（top）b 页底（bottom）p 独立一页（page） 插入公式 形式 比较常用的公式 转换字符：\\mbox{}，用于特殊字符，中文字符等转换成数学公式 绝对值等括号：\\left\\| a \\right\\| argmin等下标：\\underset{j}{\\arg\\min} 插入code代码 代码配置 引入包:\\usepackage{listings} 包配置：123456789101112131415161718192021222324\\definecolor{codegreen}{rgb}{0,0.6,0}\\definecolor{codegray}{rgb}{0.5,0.5,0.5}\\definecolor{codepurple}{rgb}{0.58,0,0.82}\\definecolor{backcolour}{rgb}{0.95,0.95,0.92}\\lstset{ backgroundcolor=\\color{backcolour}, commentstyle=\\color{codegreen}, keywordstyle=\\color{magenta}, numberstyle=\\tiny\\color{codegray}, stringstyle=\\color{codepurple}, basicstyle=\\footnotesize, breakatwhitespace=false, breaklines=true, captionpos=b, keepspaces=true, numbers=none, numbersep=5pt, showspaces=false, showstringspaces=false, showtabs=false, tabsize=2, language=bash %escapeinside=``} 插入代码 12345678\\lstset{language=C}\\begin{lstlisting}#include &lt;iostream&gt;int main(){ print(\"a\"); return 0;}\\end{lstlisting} 效果： 其他 引用中文:Option-&gt;Cofiguration Texstudio-&gt;build -&gt;default compiler 改为XeLaTeX 代码保持缩进:Option-&gt;Cofiguration Texstudio-&gt;Editor-&gt;Indentation Mode 改为：Keep Indentation 伪代码 宏包：\\usepackage{algorithm}\\usepackage{algorithmic} 案例： 12345678910\\begin{algorithm} \\caption{A} \\begin{algorithmic} \\STATE {$\\mbox{m个样本}:x^1,x^2,...,x^m$} \\REPEAT \\STATE $c^i:=a$ \\STATE $\\mu_j:=b$ \\UNTIL{B} \\end{algorithmic}\\end{algorithm} 效果：","link":"/e92178a3.html"},{"title":"优化加速","text":"速度测试profile用法： 1234import profiledef fun(a): return aprofile.run(\"fun(3)\") 输出：","link":"/42320b20.html"},{"title":"Latex | 公式","text":"基础 写法在行内公式为$math$,段内公式为$$math$$ 行内公式：$E=mc^2$,可以让公式在文中与文字或其他东西混编，不独占一行. 段内公式：使公式单独占一行，不与文中其他文字等混编。$$E=mc^2$$ 格式 上下标： 上标^,下标_,扩号为整体{} 两边都有$\\sideset{^2_2}{^3_4}A$,例如：$\\sideset{^2_2}{^3_4}A$ 括号： 普通的(,[,{因为有特殊作用想要显示的时候得\\lbrace或者\\rbrace 分数： \\frac{numerator}{denmorator}，例如：$\\frac{1}{2}$显示为$\\frac{1}{2}$ 将公式放的清楚一点可以用\\cfrac{numerator}{denmorator}，例如：$\\cfrac{1}{2}$ 开方： 开方使用\\sqrt[次数]{被开方数}这样的语法 正上下方标： 对于max等数学符号直接用\\limit,例如$\\max\\limits_{a&lt;b&lt;c}$显示$\\max\\limits_{a&lt;b&lt;c}$ d 对于非数学符号，用\\mathop转化，例如$\\mathop{\\mu}\\limits^{-}$显示$\\mathop{\\mu}\\limits^{-}$ 上下画线与花括号： $\\overline$,例如$\\overline{a+b+c}$显示$\\overline{a+b+c}$ $\\underline$例如$\\underline{a+b+c}$显示$\\underline{a+b+c}$ $\\overbrace$例如$\\overbrace{a+b+c}$显示$\\overbrace{a+b+c}$ $\\underbrace$例如$\\underbrace{a+b+c}$显示$\\underbrace{a+b+c}$ 特殊上下标字母 ^: $\\hat{\\mu}$ 或 $\\widehat{\\mu}$显示$\\hat{\\mu}$或$\\widehat{\\mu}$ 波浪线：$\\widetilde{\\mu}$ 显示$\\widetilde{\\mu}$ 一个点：$\\dot{\\mu}$ 显示$\\dot{\\mu}$ 两个点：$\\ddot{\\mu}$ 显示$\\ddot{\\mu}$ 数学符号 希腊字母 大写 代码 小写 代码 $A$ $A$ $\\alpha$ $\\alpha$ $B$ $B$ $\\beta$ $\\beta$ $\\Gamma$ $\\Gamma$ $\\gamma$ $\\gamma$ $\\Delta$ $\\Delta$ $\\delta$ $\\delta$ $E$ $E$ $\\epsilon$ $\\epsilon$ $Z$ $Z$ $\\zeta$ $\\zeta$ $H$ $H$ $\\eta$ $\\eta$ $\\Theta$ $\\Theta$ $\\theta$ $\\theta$ $I$ $I$ $\\iota$ $\\iota$ $K$ $K$ $\\kappa$ $\\kappa$ $\\Lambda$ $\\Lambda$ $\\lambda$ $\\lambda$ $M$ $M$ $\\mu$ $\\mu$ $N$ $N$ $\\nu$ $\\nu$ $\\Xi$ $\\Xi$ $\\xi$ $\\xi$ $O$ $O$ $\\omicron$ $\\omicron$ $\\Pi$ $\\Pi$ $\\pi$ $\\pi$ $P$ $P$ $\\rho$ $\\rho$ $\\Sigma$ $\\Sigma$ $\\sigma$ $\\sigma$ $T$ $T$ $\\tau$ $\\tau$ $\\Upsilon$ $\\Upsilon$ $\\upsilon$ $\\upsilon$ $\\Phi$ $\\Phi$ $\\phi$ $\\phi$ $X$ $X$ $\\chi$ $\\chi$ $\\Psi$ $\\Psi$ $\\psi$ $\\psi$ $\\Omega$ $\\Omega$ $\\omega$ $\\omega$ 关系运算符 符号 代码 $ \\pm $ $\\pm$ $\\times$ $\\times$ $\\div$ $\\div$ $\\mid$ $\\mid$ $\\nmid$ $\\nmid$ $\\cdot$ $\\cdot$ $\\circ$ $\\circ$ $\\ast$ $\\ast$ $\\sim$ $\\sim$ $\\approx$ $\\approx$ $\\bigodot$ $\\bigodot$ $\\bigotimes$ $\\bigotimes$ $\\bigoplus$ $\\bigoplus$ $\\leq$ $\\leq$ $\\geq$ $\\geq$ $\\neq$ $\\neq$ $\\approx$ $\\approx$ $\\equiv$ $\\equiv$ $\\sum$ $\\sum$ $\\prod$ $\\prod$ $\\coprod$ $\\coprod$ 集合运算符 符号 代码 $\\emptyset$ $\\emptyset$ $\\in$ $\\in$ $\\notin$ $\\notin$ $\\subset$ $\\subset$ $\\supset$ $\\supset$ $\\subseteq$ $\\subseteq$ $\\supseteq$ $\\supseteq$ $\\bigcap$ $\\bigcap$ $\\bigcup$ $\\bigcup$ $\\bigvee$ $\\bigvee$ $\\bigwedge$ $\\bigwedge$ $\\biguplus$ $\\biguplus$ $\\bigsqcup$ $\\bigsqcup$ 对数运算符 符号 代码 $\\log$ $\\log$ $\\lg$ $\\lg$ $\\ln$ $\\ln$ 三角运算符 符号 代码 $\\bot$ $\\bot$ $\\angle$ $\\angle$ $\\sin$ $\\sin$ $\\cos$ $\\cos$ $\\tan$ $\\tan$ $\\cot$ $\\cot$ $\\sec$ $\\sec$ $\\csc$ $\\csc$ 微积分运算符 符号 代码 $\\prime$ $\\prime$ $\\int$ $\\int$ $\\iint$ $\\iint$ $\\iiint$ $\\iiint$ $\\iiiint$ $\\iiiint$ $\\oint$ $\\oint$ $\\lim$ $\\lim$ $\\infty$ $\\infty$ $\\nabla$ $\\nabla$ $\\mathrm{d}$ $\\mathrm{d}$ 箭头符号 符号 代码 $ \\rightarrow $ $\\rightarrow$ -箭头符号 矩阵1$$\\left[\\begin{matrix}1 \\\\\\ \\vdots \\\\\\1 \\end{matrix}\\right]_p$$ 效果：$$\\left[\\begin{matrix}1 \\\\ \\vdots \\\\1 \\end{matrix}\\right]_p$$ -矩阵","link":"/9e1c189d.html"},{"title":"Python | 函数库","text":"caffecaffe 主流有两种下载方式： Berkey 的框架caffe，官方install instruction For windows:官方指南 compile and build git clone https://github.com/BVLC/caffe.gitcd caffegit checkout windowscd scripts./build_win.cmd Erros: 12345678910-- Could NOT find GFlags (missing: GFLAGS_INCLUDE_DIR GFLAGS_LIBRARY)-- Could NOT find Glog (missing: GLOG_INCLUDE_DIR GLOG_LIBRARY)CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message):Could NOT find Protobuf (missing: Protobuf_LIBRARIES Protobuf_INCLUDE_DIR)Call Stack (most recent call first):C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)C:/Program Files/CMake/share/cmake-3.14/Modules/FindProtobuf.cmake:594 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)cmake/ProtoBuf.cmake:9 (find_package)cmake/Dependencies.cmake:48 (include)CMakeLists.txt:80 (include) 这里的解决方法是安装依赖库，但是依赖库的安装需要Ubuntu的版本，然后也是没有看到好的方法。 另外一种来自于微软的官方文档，微软的方法。 由于版本不一样，需要修改适应我的环境Cuda 10.1 Cudnn 7.5.1 VS2017 python3.7 vs141 注意原来的版本是VS2013，用的是mscv120工具，VS2017可以直接升级为vs141 git clone项目 复制CommonSettings.props.example 到 CommonSettings.props,并修改以下配置主要就是python的路径和cudnn的版本 falsetrue10.1C:\\ProgramData\\Anaconda3 打开../windows/Caffe.sln 修改../windows/scriptsBinplaceCudaDependencies.cmd 第22行改为高版本cuda默认解压不带cuda子文件夹，该cmd不修改编译会出现MSB3073错误 copy /y “%CUDNN_PATH%\\bin\\cudnn*.dll” “%OUTPUT_DIR%” 修改../caffe-master/include/caffe/util/cndnn.hpp 第115行为增添CUDNN_CHECK宏添加一个参数CUDNN_DATA_DOUBLE，这是因高版本CUDA接口与低版本接口不一致导致的 #elseCUDNN_CHECK(cudnnSetConvolution2dDescriptor(*conv, pad_h, pad_w, stride_h, stride_w, 1, 1, CUDNN_CROSS_CORRELATION，CUDNN_DATA_DOUBLE));#endif 修改好后编译libcaffe项目，设置项目属性关闭C++，将警告视为错误，然后生成 然后编译整个项目 如果你嫌自己一个个调整麻烦，可以参考我修改过的项目，其中需要更改的步骤列在readme里面了.caffe-win10 windows下的Ubuntu官方文档 安装适用于 Linux 的 Windows 子系统 以管理员身份打开 PowerShell 并运行 Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux 出现提示时，重启计算机 安装所选的Linux分发版(其他办法见文档，这里使用命令行下载首选的发行版) 使用 PowerShell 下载发行版，请使用WebRequest cmdlet。 下面是下载 Ubuntu 16.04 的示例说明 Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1604 -OutFile Ubuntu.appx -UseBasicParsing 如果下载需要很长时间，请通过设置来关闭进度栏$ProgressPreference = 'SilentlyContinue' 初始化新安装的分发版 开始菜单找到 ubuntuXX.appx文件，点击打开 约3-10分钟初始化，之后就可以使用了 deeplabdeeplab blog","link":"/89aec4a9.html"},{"title":"Env配置 | 小手册","text":"Env配置，各种乱七八糟的。 Caffe Packagescaffe","link":"/63f7c9e0.html"},{"title":"Office | 小手册","text":"编辑快捷键 段落符号 ctrl + shift + L Unicode 代码 &amp; latex 代码Unicode: alt + x 符号 Unicode Latex $\\checkmark$ 2713 $\\checkmark$ $\\heavycheckmark$ 2714 $\\heavycheckmark$ $\\ballot$ 2610 $\\ballotboxwithcheck$ $\\ballotx$ $\\heavyballotx$","link":"/59d4e7dc.html"},{"title":"Sublime的插件们（一）","text":"前言 看这个创建时间，如果仔细查课表，这时候我本来在上课的，然后小孔说她的blog建好了，然后我就想起来typora不好看，然后我就查了一下下，然后就被sublime吸引了。。。 伟大的sublime sublime真漂亮，高亮真漂亮，长得真漂亮，黑底色真漂亮。。。 而且免费（讲道理要买license）使用。 Sublime官网 当然鼓励购买，虽然license的限制，至少我还不知道是什么~ 吾爱破解 大神的破解，我还没有时间尝试，先把地址马在这里。 Package InstallSublime 有非常多的Package可供安装，安装过程如下： 01 Step 1 安装Package Install“Ctrl+`” 打开控制台（也可以View -&gt; Show Console)在控制台下输入以下语句： 12345678import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) 这段代码具体参照安装指南 02 Step 2 安装插件‘ctrl+shift+p’打开Command Palette (Tools)里面输入Package Install ,点击，然后找到需要安装的插件（！注意有两个步骤，不要在command里面搜索插件，我开始就愚蠢地这么做了) 这里注意，可能会需要一点时间寻找package，不过就我的经验来看，没有立刻出现一般就是有点问题了。貌似和Sublime的代理信息有关，因为连接代理就失败，校网也不太行，外网全局才可以。 下载完成了以后就可以快乐地使用啦~如果有对插件的更改问题，可以在Preference -&gt; Package Setting 中设置。 我安装的插件们 Twig:支持swig高亮 MarkdownEdit：支持Markdown高亮 插件官方说明 OmniXX Sublime的调试Sublime的一些操作注意所有默认设置都需要重启sublime来生效！ 偏好设置Preference - Settings 01 default settings其实都有注释，自己看着理解就好了。操作简单，将default的内容复制到user中进行更改。 快捷键sublime 的设置 字体大小： ctrl + 鼠标滚轮 控制台：”ctrl+`” md语言设置 收起同级目录： shift + tab –&gt; 来自Markdown Editing 的 key bind 图片插入：mdi+tab –&gt; MarkdownEditing 链接插入：mdl+tab –&gt; MarkdownEditing 显示overview in html: ctrl+alt+o –&gt; OmniMarkupPreviewer 解决方案：在setting-user中加入12345{ \"renderer_options-MarkdownRenderer\": { \"extensions\": [\"tables\", \"fenced_code\", \"codehilite\"] }}","link":"/358d93b2.html"},{"title":"Git | 小手册","text":"SSH 链接 下载git 工具 绑定用户 git config –global user.name “username”git config –global user.email “usermail@163.com“ SSH 链接 ssh-keygen -t rsa 生成密钥 cd ~/.ssh 查看文件密钥生成（3个文件）复制id_rsa.pub 打开github网页 -&gt; setting -&gt; SSH菜单 -&gt; Add SSH key ,粘贴 id_rsa.pub文件 repository quick setup+ create new one: 123456echo &quot;# Adversarail-model&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https://github.com/glazialuna/Adversarail-model.gitgit push -u origin master push 12git remote add origin https://github.com/glazialuna/Adversarail-model.gitgit push -u origin master import 辨析 initial : readme / license / .gitignore code / issues / pull requests / projects / wiki / security / insights / settings Reference[^1]:","link":"/c5ff7834.html"},{"title":"Codelab","text":"写在前面感觉现在很多公司都有走近校园的趋势，陈老师说英伟达愿意提供免费的（价值一万美元）的课程出来，希望合作，阿里这个也是。不过实话，这个课挺水的。 OceanBase?金融级分布式架构–三地五中心（五地，保证安全可靠性） mPaaS热修复蚂蚁金服-晟章 移动端动态化方案：小程序，H5：阿里构架应用层：扫一扫 转账服务层：指纹框架：组件：容器：bundle resource： Nebula（H5），小程序：止血，动态，避审核 mPaaS技术架构和能力（IOS）介入组件可变；升级包、hotpatch、离线包MDS（H5，小程序，hotpatch） Android 开发mPaaSJDM：java（），xml（描述，布局） 布局,简单的Android应用程序Linearlayout: horizon vertical 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970 package com.alipay.helloworld;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;public class MainActivity extends AppCompatActivity { EditText nameEt; EditText passwordEt; Button button; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); nameEt = (EditText)findViewById(R.id.et_name); passwordEt = (EditText)findViewById(R.id.et_password); button = (Button)findViewById(R.id.btn_login); button.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { String name = nameEt.getText().toString(); String password = passwordEt.getText().toString(); // 登录操作 Toast.makeText(MainActivity.this, String.format(\"name: %s, password:%s\", name, password), Toast.LENGTH_LONG).show(); } }); }}&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" tools:context=\"com.alipay.helloworld.MainActivity\"&gt; &lt;EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:hint=\"用户名\" android:id=\"@+id/et_name\" /&gt; &lt;EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:hint=\"密码\" android:id=\"@+id/et_password\" /&gt; &lt;Button android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"登录\" android:textSize=\"40sp\" android:id=\"@+id/btn_login\" /&gt;&lt;/LinearLayout&gt; mPaaS热修复简单操作热修复-语雀 ？？node.js,reactbrew.shdeveloper.android.comdeveloper.apple.comFlutterhttps://tools.ietf.org/html/rfc2616","link":"/eff0b37f.html"},{"title":"致比乌斯领悟","text":"致最爱的宝宝们：&ensp;&ensp;此信致敬最最宠爱我的室友宝宝们，希望宝宝们在玉泉拥有自己的快乐室友，可以忘记我了，哈哈哈哈哈哈。&ensp;&ensp;犹记第一次见面，cyt和cte以及其相同的名字让我口舌不清，ssxj用其显眼的大眼一下子就吸引我的视线。ssxj是一条小红群，第一印象就是口齿伶俐，非常有想法的姑娘。果不其然，第一次聊及语文水平，11的平方以压倒式胜利获得了所有人的敬仰。我到寝室的时候，qsz已经基本收拾完毕，顺便将寝室的空调、饮水机等安置完毕，因此荣获寝室长称号。当然，无数次为我们开药，以坚挺了一年的良好作息的事实证明，这个称号当之无愧。&ensp;&ensp;我们出去玩耍的机会并不很多，除了近距离的聚餐，最多的集体可能就是迁就我的密逃了，虽然我总是错误估计我们的胆量。如果没记错，最后一次是一个唯恐主题，介绍说有一个甜蜜的彩蛋，恐怖程度已经低到不配拥有监控记录。而一路过去，我们除了尖叫，也没心思干什么，如果不是fafa还有一丢丢神志，基本是可以在里面过夜了。那最后一个小房间，ssxj和qsz以掩耳不及盗铃之势迅速压在我的身上，我全身只剩两只可怜的脚还暴露在外面，第一反应就是，啊，我的脚在外面缩不进来，事后回忆，真的是重啊你们。&ensp;&ensp;四个人的化学反应，不是共度一段时光，而是制造一段时光，遥想二十年后，死不恋爱的qsz将开始谈论起工作，义正言辞的ssxj开始为生活操劳，包容所有的fafa开始发福，而我可能只能在回忆中看见这个时候的你们。哇，这真是无比的现实呢？&ensp;&ensp;fafa，最最好说话也是睡眠最浅的宝宝。浓眉大眼，肤色根据假期不断浮动，最宅最随性。撒个娇就愿意帮忙下楼拿外卖，买早餐，带快递。wy的体力支柱，以及每个下床的夜晚都能够看见的那双迷惘的大眼睛。&ensp;&ensp;ssxj，情史最丰富也是最正常的宝宝。会做影评摘抄，拥有全寝室唯一的海报（自己购买意愿），会说无数的。&ensp;&ensp;qsz，最天真也是供献最多笑料的宝宝。可以介绍的爱好是，喜好看耽美的小姑娘，会因为背着书包太重了就把书包丢在一楼自己回寝室先端坐一会儿再下去或者是在食堂自修的。以生动描述食材和药物效用闻名405，撒娇最娇气，学习最认真，家乡话最难懂以及最喜欢粗犷的坐姿。&ensp;&ensp;考试周后5个小时的中饭；围着肉蟹煲的寝室小聚；集体嘲笑某个傻宝宝的傻言傻事；节日气氛下的天隔四方；无比昂贵的热水费；层出不穷的黑照留念；嘴上谈天的结婚生子；没有意义的梦境分享；每天建个小群的狂妄叫嚣；说走就走的从众心理；哭天抢地的/&ensp;&ensp;两年能发生的故事太多太多，多么幸运可以遇到包容我的你们。仿佛每一个夜谈、每一次笑到肚子疼、每一场聚餐、每一次的节日祝福都可以瞬间出现在新的梦里。因为你们，我可以偷懒整天不下楼，我可以雨天不用自己撑伞，我可以在烦躁的时候99+刷屏寝室群，在寝室里任意的姿势移动，可以拥有只是笑意的记忆。&ensp;&ensp;我最可爱的姑娘们啊，幸福到极致就是不舍和不舍，不舍离别，不舍可以预见的越走越远，不舍在最好的时光分离。若时间倒流两年，在最开始的最开始，我一定能用更加流畅的文字描绘一点一滴，可正如所有的无奈，加一点点不尽人意的辞藻，留给以后修修改改的时间把。&ensp;&ensp;为什么有一种再也不会相见的写法？噢，我再也不想看见你们三个小坏蛋，天天吃小孩，天天欺负小孩。 祝一切顺利受尽宠爱的小孩2019.7.7","link":"/9df4ac75.html"},{"title":"解决Onenote字体问题","text":"解决Onenote字体问题，出现中英文转换的问题，转变默认设置依旧保持calibra的字体问题。 这是Onenote一个持久的问题，微软给的解答是： 修改默认字体 - 无效 添加notegem工具 - 没试过 广大的网友们提出了新的解决办法：替换字体 修改字体 已修改结果 下载安装并使用Font Creator这个软件，我用的是7.5版本 Font - Properties - Idenfication - Font Family 把微软雅黑改成Calibri，保存File - Export Font - Export as TureType/OpenType Font，一个是ttf格式的，另外一个是otf格式的，都是可以的 得到两种修改名字后的字体库，就可以双击安装了，替换原有字体，是 安装新字体 建议备份原Calibri文件（C:\\Windows\\Fonts) 安装新字体 重启windows","link":"/bca9060f.html"},{"title":"Pycharm | 小手册","text":"快捷键 运行 Shift + F10 ： 运行 Shift + F9 ： 调试 PluginSSHGPU","link":"/7d0fb6a6.html"},{"title":"面试题目集合","text":"为啥写这个呢？&ensp;&ensp;今天中午吃饭的时候看到美团在饿了吗的订单里面粘贴了一张二维码，我觉得美团都这么努力了，我怎么能落后呢？&ensp;&ensp;于是看到了知乎上面，别人发的题目集合，一下子想起INA惨痛的面试经历，觉得自己弱爆了，所以我就写啊写，写作业，顺手写了以下的题目。 算法类动态规划类逻辑类找出不同的数字题目描述：给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。 概率类first case题目描述：某次事件发生的概率为p，求第一次发现的发生次数的期望 答：$\\frac{1}{p}$ first case 益智类 语言类-C++","link":"/8094e965.html"},{"title":"Notre-Dame de Paris","text":"现在是4月16号，从早晨开始，中国的社群网络挂起来了一股哀悼的风，在风中裹挟着各种的观点。在这一个时代，一场大火的时效性在一天以内，而个人的观点在id后面发出自己的声音。 我是在吃中饭的时候看到这条消息，更准确地说看到了许多人对这个消息的态度，有人为伟大的艺术成就而哀悼，有人感激复刻全局的公司，有人想起了曾经的圆明园，有人感叹文化输出。 而我想要搜寻关于它的历史，关于它的图片，在wiki百科上已经有人迅速地增加了它的条目4.15火灾.怎么说，一个地标性建筑，沐浴过战火与鲜血，承载了宗教与信仰，800年的建筑。它的消逝，虽然只是一个阁楼，而这个阁楼的照片却是最为经典的。 这是一个经典的角度，在许多电影和故事中出现的美丽一角。 和这个阁楼一起著名的是那个二战时期的故事，有一个德国士兵奉命炸掉巴黎圣母院，结果在看到华美的建筑以后迟迟不能够移步，在最后一秒钟，炸弹哑了。真实情况是肖尔蒂茨将军以炸伤士兵为由拒绝纳粹空军对巴黎市区的轰炸，最后投降。 在今天的事件发生以后，许多人在社交平台上刷屏了这些故事，以此表示如此美丽的建筑能够历经风雨存活下来是多么地可贵。至于巴黎圣母院最大的名气，雨果的小说中有长达二十页的建筑描述，还有游客照片。 我为它感到悲哀，但这种悲哀并没有延续多久。历史的东西会给人一种安心感，否则轻飘飘的一辈子没有什么证明的东西，你几乎很难感受到生命和时光的重要。正是有这些存在的，仿佛可以证明永恒的东西，你才觉得有些东西可以比生命更闪烁，而不会因为纯粹追求生命而丧失底线。 历久不衰真的不容易，要么是有一代一代人珍贵的守护，要么就是惊艳地让每一个看到的人都能够赞叹不已。就像文明的延续一样，那么多元素都在一直不断地重新组合，你脸上的汗水曾经可能是病床上的眼泪，他眼里的灰尘又可能是那件古董上的锈迹。 每一次小的挫折感觉都是在提醒你去反思反省，一场大火又打断了多少人日复一日的工作节奏，可以去回忆，哪怕是和家人旅游的故事，又或许是那日翻开书页旁边的同学。 我羡慕巴黎圣母院的毁灭能够在这样一个和平的年代。这样在这里会有这么多人为它认认真真的感受到疼惜，会多那么几个人重新思考，会有人募捐重建（虽然我不希望这样，我喜欢中国文物修复的精神）。不像有些东西，在战火纷飞里悄无声息的就没有了。 补充说明：刺客信条，免费发放账号（那个精细测量巴黎圣母院的游戏重建）法国的重建捐款被叫停，出台的方案都被表示不合适，且希望钱用在更加重要的事情上面。重建方案链接 改装泳池？建造温室和养蜂场？用火焰的造型？安一个大灯筒？哭了。","link":"/ad6445f8.html"},{"title":"六月份的尾巴|栀子花","text":"最忙碌的考试周的六月份，偶尔在小剧场门口闻见了清香的栀子花，突然有些有的没的想说的故事。当然，在这里要反省一下，本来是向技术博客发展的东西全部是随笔，主要随笔想到写道没花大量的时间，技术博客耗时多一点。 栀子花 &ensp;&ensp;今天闻见栀子花的时候是正在迅速地走路，不是这样浓郁而干净的味道，我几乎不能注意到这一小从花朵。白色的，长在有刺的灌木上，很少却很香。 &ensp;&ensp;栀子花常常伴随着的是毕业季，每一年的毕业季校园里都是慢慢的味道。小学的教学楼后面曾经有一大片栀子花，当时的班主任会在六月的时候去摄影。当时，我不知道这种花背后是意义，只知道这一段时间六年级的学长学姐在回去的校车上抱着很多的礼物，带着漂亮的小帽子，一直期待着自己的六年级。 &ensp;&ensp;可是，我六年级离开的那一天，平淡的听老师讲话，然后便和许多个暑假一样回家了，连同学录都没有。平凡的生活，也许也是我会抱着各种名著喜爱里面各种神奇人物的起起伏伏的原因吧。 &ensp;&ensp;在这样一个六月，突然地又一次闻见这个味道，我一瞬间有些可惜，大学的校园里面应该有更多的这样纯白的花朵，用来欢送我们离开人生最后一个象牙塔。一个不仅仅是隔离社会，也是备受宠爱的时期。 等待 &ensp;&ensp;传说中栀子花的花语是等待的爱情栀子花的花语：喜悦。欢此花的你有感恩图报之心，以真诚待人，只要别人对你有少许和善，你便报以心灵致谢。 &ensp;&ensp;突然希望自己在初三时能够提前阅读过《重回初三》，希望自己进入大学的时候能够知道《打火机与公主裙》，希望两年后的自己可以在栀子花的陪伴下拥有一起欢欢喜喜拍摄毕业照的好朋友。 &ensp;&ensp;我真的觉得，喜欢栀子花，就像喜欢这样不留意地发现她的情况。花店里面很少能看到栀子花，大多是一些色彩艳丽的，有枝干的，适合包装的花朵。百合，算是少有的浓郁花香的吧。从生物学的角度来说，如果不是通过色彩，也只能通过味道来吸引传粉者了。 &ensp;&ensp;等待，很奇妙的一个词，仿佛期待那个有缘的，心有灵犀的一个人吧。上次和小月说，能够等到到一个有缘人有多少难度，最好爱好相同，最好工作相近，最好家庭有些连接。 &ensp;&ensp;所以，大部分人还是一个人。或者是，因为孤单而迁就地拥有一些可以欢笑的朋友吧。静静地等待，还是会发现自己的香味和自己的小蜜蜂？ Gardenia jasminoides &ensp;&ensp;CHANEL 的 Gardenia 从1925年上市开始就是经典款，因为栀子花盛产于东南亚地区，是中国古代的庭园香花树，在欧洲相当少见，所以运用多款花材调配出来的栀子花香也格外珍贵。 &ensp;&ensp;栀子花的精油很难提炼，一般在香水中要么是淡淡的前调，要么是主调。因为她的香气足够有场景感，足够独特浓郁，和任何别的味道参杂都会显得格格不入。 &ensp;&ensp;Gardenia, 竟然能够和Garden使用同样的词根，有骨气有底气。 &ensp;&ensp;栀子花，六月份的尾巴。","link":"/b79114ed.html"},{"title":"瑞幸咖啡上市是个HE ？ BE","text":"&ensp;&ensp;瑞幸咖啡，我第一次注意到是在城西银泰楼下，当时第一杯免费，后来一讨论发现扩张很快。说实话，咖啡口感不尽人意，全咖啡机操作，我要的冰摩卡，无拉花，不能控制浓度。 &ensp;&ensp;大概了解了一下这家顶着神州CEO，10亿资金的，号称打败星巴克的，疯狂撒钱洒出滴滴和uber的状态的公司，并不看好。 &ensp;&ensp;这几天，lunkin的短信收到了两三条，本来移位只是促销活动，今天发现竟然上市了，忍不住就查了查这到底在干什么。 &ensp;&ensp;先来说说这位神州前CEO钱治亚，神州租车、神州优车两家上市公司的创始元老，并先后担任两家公司的首席运营官职务。 &ensp;&ensp;她认为，目前国内咖啡消费市场存在两大痛点：价格高、购买不便,而在市场切入上，瑞幸咖啡也正是瞄准这两点。 &ensp;&ensp;她的策略是，瞄准国内市场的价格高、购买不便，带上她强烈的互联网风格，主打买1送1、买5送5高补贴、价格低廉的配送和网购模式，扩张一线城市写字楼市场。 &ensp;&ensp;2018年7月迎来2亿美元的A轮融资，愉悦资本、新加坡政府投资公司等多方参与了本次融资，投后估值为10亿美元。2018年12月和2019年4月，瑞幸咖啡已接连收获2笔3.5亿美元融资。 &ensp;&ensp;看看luckin的财务情况，2018年的净收入为8.4亿元人民币，净亏损16.2亿元人民币；截至2019年3月31日净收入为4.8亿元人民币，净亏损5.5亿元人民币。瑞幸咖啡在一线城市核心区域500米之内已经实现了100%的覆盖. &ensp;&ensp;截至2018年12月31日，瑞幸在全国22个大城市落地门店2073家，累计用户1254万，全年共销售杯量8968万，这一数据步步紧逼排名第一的星巴克，同时把COSTA等其他对手甩在身后。 &ensp;&ensp;这一场战争给到我们看到的是，不计成本烧钱投入和抢占市场。 &ensp;&ensp;此处突然好奇，星巴克一直没有外卖的原因，直接查表示都是因为保持口感，18年8月3日星巴克和阿里巴巴签署合作协议，在中国发展咖啡外送服务。但是一些外卖平台上的星闪送，则是私人通过买三杯送一杯的优惠来赚取差价和外送费。 &ensp;&ensp;话说回来，我一直觉得星巴克的花式，尤其是他的招牌星冰乐并不怎么样。不过他的卡和包还是挺好看的，之前有一个蓝色美人鱼的，后来在英国被扒手扒走了，幸好我独立习惯了，随身带两个钱包，所有财产和证件分开放，所以只是丢了一百欧元。哈哈哈哈，暴风式夸奖自己一波，噢，不对，主题歪了，那个我觉得costa更好喝~ &ensp;&ensp;所以又没忍住，查了一查，Costa隶属于Whitbread公司，在2006年进入市场和悦达各注资51，49建立，在中国走合资经营的路子。08年和华联合作各分50，开始北方区的开拓。 &ensp;&ensp;starbucks是美国品牌，00年进入中国，开始和美大、统一和美心合营，后来08年后收回南方地区的代理权改为直营，后来又收回来一些地方。中国份额51%。 &ensp;&ensp;18年可口可乐收购Costa所有运营业务，51亿美元，雀巢71.5亿美元收购星巴克零售和饮料业务（17年收购blueBottleCoffee，ChameleonCold-Brew等现磨品牌，毕竟速溶市场不景气啊）。 &ensp;&ensp;作为体验者来看，costa简洁，双耳大杯子非常可爱，Starbucks则是花式，有许多包括粽子、饼干等其他副产品，被叫做体验文化，店面也更加显得时尚文化，杯子种类很多，可颂很好吃。 &ensp;&ensp;现在咖啡市场增速恐怖啊，全球为2%，中国为15%，业界预估千亿元规模。开展业务包括现磨咖啡、速溶咖啡、便利店、和咖啡机、咖啡豆（就本人家里来说今年刚入手两台）。全球，JAB从时尚奢侈品推出六年斥资580亿美元，收纳peet’s coffee, cariboucoffee, keuriggreenmountain , pretamanger等品牌，他的JacobsDouweEgberts市占率9.6%，仅次于雀巢。还有麦当劳、肯德基和7-11的参与。 更新 2019.10.12&ensp;&ensp;纽约时报^1写，虽然都销售咖啡，瑞幸和星巴克在中国市场却有着不同的营销方式。瑞幸主要靠外卖和送货上门，在这个喜欢在智能手机上点餐的国度，这是个受欢迎的选择。瑞幸还运营小店面，顾客可以前去那里取咖啡，查询最新折扣或了解他们的优惠方案。 瑞幸的下一个大问题在于，如何开始盈利。一旦折扣取消，尚不清楚喜欢瑞幸打折咖啡的顾客是否愿意支付全价。 可以看一下这个笑一下^2。","link":"/da362fd2.html"},{"title":"第一次美帝游","text":"美帝的一个月即将结束，自然应该写一些记录下来，不然很快很快就会忘记了。一个人解决所有住宿的东西，感觉还是有一种比较好的融合感。 before everything&ensp;&ensp;在写这个的时候，突然想把上次在英国的写一遍，但是之前那次我在qq、pyq也有一定的记录了，而且现在记忆也比较模糊了，是以就放弃了。&ensp;&ensp;原本我的美国还应该包括一次婚礼，一次skyspace（在洛杉矶），和一趟纽约之行的。但是考虑到时间因素，但是后来由于一些关于自己身体的原因也是没有去成的。 &ensp;&ensp;还是有一些遗憾的，比如心心念念的国家公园，难得一见的博物馆，和闪着荧光的海滩和荒漠中的日出或日落。 &ensp;&ensp;还有关于学习的遗憾，原本计划的TOFEL和Professor的聊天砸了。聊天是因为自己实在没有太多的成果，实在不好意思去弄。TOFEL纯粹是自己的原因，竟然在考试的时候睡过去了，不过国内和国外的托福确实在程序上有一些区别。 Harvard ST 24307&ensp;&ensp;到住家的第一个晚上，我其实内心是很慌张的。大约23：40才从出租车下来，我是一个人独立在外面合租，进去的时候手机的卡出现问题，wifi连不上。进门连一个人都看不见，四个房间除了一个房间的门里传来音乐声，其他的房间都安安静静。我试探地走到另外几个房间敲门都什么都没有回应。猜测着到了自己的房间，矮小的屋顶和蓝色质地粗糙的床单都是崩溃的来源。打开衣柜，隔墙就是一堵门，隔壁是不明所谓的声音。当时大概心情真的是非常崩溃的状态下的。 &ensp;&ensp;勉强尝试登陆了xinity的free wifi for one hour，给父母和同伴报了平安，然后就联系卖家，才发现手机卡需要提前激活，店家说紧急激活最少要到第二天8点才行。勉强撑着一个小时的时间联系了一下父母。去到洗手间，是没有锁的门，我根本不敢洗，只能和衣而睡睡到早上。早上焦虑地等了大概到10点，终于拿到了网络联系。 &ensp;&ensp;第2、3天吧，我兴致勃勃地买了许多食材回家，打算大吃一顿。用塑料盘子，成功地把烤箱点燃了。烟雾报警器自然是响了，幸好隔壁的小姐姐帮我灭了火（好大一团火，幸好我还有临床反应越过火堆关掉煤气阀门）。 &ensp;&ensp;后来几天的相处，大家都非常有默契地不打照面。隔壁的小姐姐周末倒是会请别人来到这个house玩耍，挺outgoing的。但是，我问她能不能帮忙转venmo她还是拒绝了，大概是习俗差异。她是google 金融的实习生，另外住了两个Columbia小哥，基本没见过。 &ensp;&ensp;我就在stanford的外延，走到校园只用穿过一个kindergarden和stanford的学生宿舍便可以了。我在Harvard str，外面是college avenue，这一个block附件都是常春藤学校命名的。 &ensp;&Ensp;转角是Starbucks，早上5：00开门。出去是大路，外面有一个framer market，周末会卖一些小东西。有许多餐馆。 Stanford&ensp;&ensp;前两个每天怼着google map看个不停，对这一块的地形了解地不要不要的。然而，有方向感和知道自己在哪里还是有一定的区别，也许这就是我工程图学画不清楚的原因（搞笑）。 &ensp;&ensp;好多人问我路，我竟然都知道。也可能我乱指的？不过，我可以保证下次来可以随意穿梭自如了，基本上每一个角落都摸得清清楚楚了。 &ensp;&ensp;我去过berkley，跟过一个visitor group一次，但是我竟然没有一次认认真真地根过Stanford的小团。 visit center在中午11：30 和下午1：30都会派出一个小团，但是我从来没有机会去过。 &ensp;&Ensp;我们在David package building，是EE的大楼，对面就是CS department。距离10min的地方就是学生中心也是主要的饭堂（pandas，美式中餐）。pandas是每餐可以减少一餐。后来我转爱对面的mac cheese with chicken wings ，配一杯Starbucks。dingding 的大叔。 jazz fun musician。 &ensp;&ensp;另外会去的饭堂，楼下的caffe，CS中间的饭堂，lakeside的，aluuent的，sports center旁边的，还有斜对角的一个。 &ensp;&Ensp;main quad， 钟楼，fake lake。我想我都会记得很注的吧。其实这种游记真的要当天写才有趣。现在很多都不太记得了。 ChristianChristian的圣经拜读。 小习惯 stop line order need time reservations 随地的赞美 SFOSanfan 的渔人码头。Berkeley。twin peek。 skydiveskydiving jump from 18000feet， 5000m。就这样把，我的第一次美帝行，肯定不是最后一次，希望Stanford也只是一个开始？","link":"/2d9b6a47.html"},{"title":"关于Project的想法","text":"MLRobustfusion: anti-adversarial — add feature noise CGrenderSIGGRAPH 2019: render: use DL to continuing animaiton","link":"/a0b64bf.html"},{"title":"关于分享网站的浅薄想法","text":"重要意义 能有一个完整的地方大家分享自己的知识和一些机会是真的一个非常好的想法，虽然很可能不能够惠及到我，但是应该还是有一定的帮助，至少会督促我去学习一些别的东西呢。 可以主动做一些消息的搜集工作，工作不会被做成重复的。 吸引相关的同学，搜集相关的信息。 关于分工和流程 对15级的采访（了解飞跃手册制作过程并参与） 对已知信息的搜索 网站搭建 用户吸引 拉青创支持【这一步在后面一点，最初经验值提供自己出出也没什么】 放心这些分工除了拉支持和用户吸引没有个人利益，其他都有 分工细节-拉青创支持 资金支持：网站的经验值设为1兑换1分，完全按照经验值兑换 资料和咨询支持：留学指导 给与：唯一广告评论和所有信息转载权力（唯一的意思是，在我的控制权内，等我毕业了，这个网站的控制权转移） 这部分注意，有没有青创的坑，建议找到那个86级的青创老学长聊天。 分工细节-15级采访 接受学长学姐的信息，可以问辅导员具体细节 丰富信息来源网站，更加完整地建立流程（可以问的细一点） 分工细节-网站搭建 登陆控制：用zju邮箱进行验证【只有用户才能看问题】 经验值控制：什么样的权力控制怎样的经验 模糊设置：对愿意分享CV的，对关键信息模糊处理，一旦上传者不满意模糊效果立即撤下。 网站设计：不要花时间了，直接就没有任何设计，或者找数媒的xjj帮忙设计 修改权力：允许用户留下红色的修改部分【及修改人信息】，即对网站的流程有修改和填充的部分，一旦有很多人赞同则收纳为网站内容，否则删除并删减经验值。 私人页面：只提供收藏功能和浏览足迹和个人发帖和经验值和 分工细节-用户吸引 第一波：来自CS学院的宣传（找新媒体） 第二波：16级的申请季，通过他们使用得到反馈，并抓住这些人的信息【一定要赶上这波，不然基本网站等于废物】 第三波： 主要内容内容简介 简历丰富（intership分享，hr会看的社交网络丰富） 路线分享（某几条大家都会走的路线和重要的时间节点） 技能分享（不同方向需要的技能和学习资源） 及时信息 简历丰富 按照fb，linkedin的分类方式，不同领域的方式给到信息网站和及时信息（例如，在intern上有许多找intern的网站） 路线分享 参照飞跃手册，把成功案例的具体时间节点写出来，在节点下面挂一些弥补措施（比如，大家可以留言这个地方还可以怎么怎么做，哪些老师怎么怎么样，这里参照经验值给分） 这个主题页就只有几条路线 技能分享 统计工作要求里面最多的要求，按照这个给到技能需求，在需求后面给到学习链接（比如，java工程师要求a，学会a要学哪些课，确保技能学习资源更加有效，只推送最多人赞成的资源，其他资源在后台调取）。 及时信息 发布学长学姐的资源（这里把资源按照要求分档，比如限制某些绩点，某些技能的） 保持活性保证有人分享有人看 好东西不能所有人都能看，需要付出一些东西才能看（可以是钱，也可以是经验）。 不是所有的经验都能够被要的，分享刚开始全通过，没有人点赞【/被吐槽】则不能通过审核，将下一次审核后才能增加经验值。最开始人流量小的时候，人工审核。 干货极强的评论（如果是学长学姐，可以给他们金钱，如果是学弟学妹加经验值） 所有人实名（昵称可以乱取） 可以通过平台发出contact邀请 内容来源 较少的一部分来自于学校网站信息，和学长学姐发的信息。 大部分还是在公共网站上的信息，提供信息搜索的渠道，不要一个自己申请连学校bbs都不会逛。 学习技能不仅学习了技能，还可以把这件事作为自己的work experience增加简历。 网站构建 网站构建的技术，基本jss/html/node.js是百搭的技术，尤其在part-time上的工作内容上，搭建这个网站的过程可以学习的技术很基础，而且专业课不会学。 排序算法","link":"/dfdf7865.html"},{"title":"我和我的祖国","text":"我和我的祖国，一刻也不能分割。 我一直都很佩服那种怀有热忱的人，或者是赤子之心。无论他们的坚持最后化成了不管是失败还是惊人的成功都好，都会让我很敬佩。因为没有他们，我们就是真的没有办法建立起现在的中国呀。 电影有七个故事，也许从商业角度上来说是最有价值，最催泪的，但是有些故事的选取在国家历史长河的角度上来讲就变得微不足道，我会有些不满意。所以想要聊聊，如果是我希望电影拍摄的角度。 七个故事的聚焦点&amp;预告分析：（现在只是看着预告猜测，看完电影我会再回来更新一波） “白昼流星” 神州十一号的故事。 两个孩子（讲了他们年轻的故事，大概是为了解释这两个人的状态）陈东 景海鹏 田壮壮 “护航” 吕潇然，备飞 年轻的故事，别人的质疑，最后上天了阅兵队伍。 这个故事我是真的不喜欢啊，战斗机本来从来就不适合表演。这种奉献我觉得吧是有点emmm巴拉巴拉的。 “北京你好” 一个人拿到奥运会的门票，有点嘻嘻闹闹，然后在进入的一瞬间。 这个年龄感很好，这个年龄的人才符合对于奥运会的自豪，和那种小市民的状态。 “回归” 香港回归，所有人为了这个时间点的努力 我希望更多香港市民想回来的（那个钟表的点非常棒） 说到这个，我一直比较遗憾我妈没有早几天生我，说不定可以赶上在 一定要 “夺冠” 排球夺冠 郎平 孩子不行 一定要有年龄的人才知道，那个孩子支持的点很不好，有一股徐峥导演的气质，有点符合。 “相遇” 原子弹的一个无名之辈，离开家人，然后不小心相遇女主给他奖励故事。 彭彭我是真的喜欢，不过演技真的不太行。他喊台词太过有目的性了，对着男主喊。我觉得应该要他拼命喊，只是随意地对着一个人喊。 我很喜欢无名之辈的这个设定。 “前夜” 万无一失升旗。这里竟然看到有些人的反对，不太真实，当时应该所有人都明白。 这里能够多提提男主为什么对于这个红旗背后的含义的重视，真的是两千万人的胜利。（管他内战，反正从抗日来说是很艰苦的，所有人，不分党派，后期的一些弯弯绕绕我们就不说了orz） 不得不说，这几个导演那种丰满每一个故事人物性格的能力不错，但是这些故事已经足够有名，其实还是那种冰山一角的处理更好。多从人的嘴里明确地说出来为什么这个事情这么重要会更加，至少是让我舒服。 除了故事处理的方式，我更希望演员要有心。真的就是不要带有任何表演痕迹，不要代入自己的演戏经验，真正的站在一个中国人的角度去面对这些故事。因为只有中国人，只要你是个中国人，面对这些故事的表现都会是一样的。 这些标志性的时间点之所以催泪，是因为他们都和自己的生活息息相关。不是这件事情本身有多么骄傲，而是这件事情的背后是多少个人放弃了普通人的追求而去无私地为这件事情奉献。无论是简单的人力弥补了技术差距，或者别的说法。我只知道，这些人如果和我一样追求平安幸福的生活，没有任何一件事情可以被完成。我只知道，这些事情的成功就是超乎所有人的预料的。是他们，在遇到抉择的时候选择了为国家奉献，换句话说是为了别人的未来奉献。 我记得&lt;百年家书&gt;里面有黎三爷（原名忘了）曾经对周XX说过，“是你们啊，我看着你们有时候都会怀疑我所坚持的未来胜利是不是一个梦。应该活着看到未来的人，不是在这里的我，而是你们”大概就是类似这样的话。也许我们很难想象，当时的他们所期望的不过是每个人吃饱饭，不过是可以不要打仗？ 有史学家评论中国人不愿意接受外国的虎视眈眈，不愿意主动抗敌，闭关锁国。但是就算知道了，难道我们有能力打出去吗？所作的不过是能保一份平安是一份平安，说打就打，那些战士的命呢？ 我是一个非常非常自我的人，我也一直清晰地认识到这个性格，但是敬佩那些会为国家的未来奉献的人呀，他们的赤忱不是愚忠而是大义。 分割线 | 观后感 今年国庆热点档的电影很多，口碑和票房是双丰收？ 回来看我和我的祖国，最喜欢是 徐峥的夺冠 和 张一白的相遇。张译演绎的非常好。 前夜中昏黄的光，布景湿润，清冽，昏黄的光是最温暖的来源。 相遇的细节很棒，张译的憔悴和急切，是很重要的部分。 白昼流星是真的糟糕，故事混乱，主角莫名奇妙，演技也不行。 回归一般般。 护航，选的故事没什么特点。 总的来说，电影不错，达到庆贺片的基本要求，但是太催泪和精彩那也是没有的。 更新 2019.10.12","link":"/12e40b78.html"},{"title":"脑残小游戏集合","text":"一个挣扎许久的脑残小王，回到寝室坐下来，心有不忿….. &ensp;&ensp;脑残小王，感觉自己的智商约等于0，为此，迅速花费了3分钟总结了各种脑残小游戏，希望看到的人可以引（xi）以（nong）为（ta）戒（ren）；请听题： &ensp;&ensp;以下给的都是正确答案，括号里面是动作，文字是语句，懒得写太多例子，只有一个，希望珍惜。如果题干中涉及到关键信息可能略去，可能不会，主要是让和我一样的脑残粉回味自己脑残的经历。 Q1：小明摔倒了 出题：看清楚了，小明在路上跑跑跳跳（手作小明在胳膊上走状），啪嗒（小明 停住），请问小明摔倒了吗？ 答案：小明没有摔倒 Q2：D是什么 出题：A是1，B是2，C是3，请问D是什么？ 答案：D是1 Q3：数马 出题：听清楚了，（手拍掌，按照一定节奏规律，拍2下），请问有几只马？ 答案：6只 Q4：黑魔法（此题需要两个人配合） 出题：A指定某样物品，B询问，（指点各种物品），请问是这个吗？ 答案：到某个魔法时刻，B就知道A指点的是什么 Q5：开关门 出题：这是开（比手指朝天），这是关（比手指朝地），请问这是开还是关（比手指朝外）？ 答案：这是关。 Q6：男生女生 Q7：死于枪下 出题：biu biu biu biu，请问谁死了 答案：我死了 Q8：谁是小熊 场景：有一群人A~Z A出题：A可能是小熊，B可能是小熊，C可能不是小熊，D可能是小熊。请问到底谁是小熊？ 大家回答一番 答案：A是小熊 Q9：猴子上山下山 如果你不幸地遇上了其中一个，被折磨地痛不欲生，那么我就要哈哈哈哈，继续折磨你们了 好啦，如果你真的想知道，联系老兔子：123123123~","link":"/4078dcc7.html"},{"title":"少年的你","text":"少年的你，看完以后，最让我喜欢的是结局，陈念没有让小北替他背下杀人的罪名，最触动的是郑义说的一句话，你我不会，但是他们会，他们还是少年。 陈念一直在追求变成大人，在她做出这个选择以后，才是真正的大人。 什么是校园暴力，不可否认的是，大家都说被暴力者会一辈子受伤害，暴力者事后总会否认自己是无心的。我说，这一切的根源都是因为少年没有正确的引导。这个引导是什么呢，正常的家庭和教育环境中，是从别人那里学习到的正确的处事方法。那么，如果家长的角色缺失，或者学校环境恶劣呢，这时候没有人即使遏制错误的行为。 这里，必然涉及一个概念，怎么规定校园暴力的界限。从我能够查询到的法律审判案例中，大部分是根据造成的结果恶劣度来判定的。也就是说，在法律意义的诉讼请求上还是通过正常的暴力事件来处理，只不过主体是在校学生。是不是说，其实就是恶劣的校园事件，只不过犯罪主体是校园学生呢，那么在实际判定惩处方式上还要考虑到未成年的因素，所以给与一定的减刑？ 在我看来，校园暴力案件和社会性暴力的一个主要区别是这些少年没有办法定义自己的行为，甚至无法了解自己的行为到底恶劣到怎样一个度上。就像陈念，她不理解自己受到的伤害是为什么，也只是一味地认为忍受是最好的方式。在整个过程中，我们可以看到她没有任何主动的防御手段，只有受到非常严重的伤害才临时想起找警官求救。这里可以看到她的误区，一，认为自己只要考上大学就会远离这样的伤害，实际上她会被针对与她离群的性格离不开，她在收到非议时丝毫没有任何为自己辩解的手段。二、她无法区分拿着刀子伤害自己，和后面的行为之间的区别，而是把他们都统一认定为伤害。这样也是导致她误伤魏莱后，意识不到自己的失手和小北谋杀之间的区别，才导致更重的结果产生。 什么样的人，容易遭受到校园暴力呢？我们可以看到，他们都有一些特征，比如不合群，性格怪癖，家庭条件奇怪等。是不是可以这么说，如果把暴力降级，只是冷隔离，其实这样的人带着这样的性格进入社会也会受到孤立？正常的成年受到孤立或者碰壁会做什么，会改变自己。而如果你收到的不是孤立，而是身体暴力，你可能会更加自闭？但也有人会开始反抗？ 记得曾经和父母谈论过这个问题，他们的观点认为校园暴力怎么会逃不掉呢？他们觉得有很多方式可以解决这个问题，也许这个给了我一个灵感。 当然，不可否认，杭州是一个文明程度比较高的地方，也就是正常社会的条件下没有太多的社会暴力，所以我确实对于其他地区的情况不能说特别了解。 但是，呼吁什么大家多多关注校园暴力，我觉得就是瞎扯。离开学校的人，怎么关注校园暴力？让家长多关注自己的孩子，笑话，大部分的校园暴力受害者都不会告知父母或者告知也没有解决方案。让老师关注，我认为是最好的方式。 就像我喜欢陈念站出来，这样才是真正地从被暴力中解脱了。暴力后，最可怕地就是从此成为一个围观者，失去对这个社会体系的基本信任。有一句话，你觉得法律没有办法惩处它，你就成为了一个犯法者是多么可悲的事情。这是道德的制高点了，也是高要求了，不是每个人都能够撇开自己的个人得失，为这个社会奉献的，但是我觉得这么多年的教育下来，基本的良知要有吧。 所以，还是那句话，我最敬佩的是，一份赤子之心追求未来的纯纯之人~","link":"/6cb973de.html"},{"title":"小王的反思","text":"Please enter the password to read the blog. Incorrect Password! No content to display! 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","link":"/5e068439.html"},{"title":"My projects","text":"PluginIOS appsOpenprojects","link":"/c747a538.html"},{"title":"Linux-Hadoop","text":"Preparation JDK(java installation) cloud server(服务器节点) 安装hadoop压缩包通过Apache Hadoop官方下载页面选择最新的Binary版本进行下载（截止2019年9月30日，Hadoop最新稳定版本为3.2.1),官方镜像文件. Binary版本是编译好的二进制版本，可以直接解压安装；另一个包含 src 的则是 Hadoop 源代码，需要进行编译才可使用。 下面安装： 123456wget http://ftp.cuhk.edu.hk/pub/packages/apache.org/hadoop/common/hadoop-3.1.2/hadoop-3.1.2.tar.gzscp -r ./hadoop-3.2.1.tar.gz root@59.111.91.121:~ # 从本地传送到服务器sudo tar -zxvf hadoop-3.1.2.tar.gz -C /usr/local #解压到/usr/local目录下cd /usr/localsudo mv ./hadoop-3.1.2/ ./hadoop #重命名为hadoopsudo chown -R hadoop ./hadoop #修改文件权限 配置hadoop环境变量目录在/usr/local 下 123456sudo vim ~/.bashrc #配置环境变量# 添加下列环境变量export HADOOP_HOME=/usr/local/hadoopexport CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath):$CLASSPATHexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin 12source ~/.bashrc # 环境变量生效hadoop version # 检查安装结果 修改hadoop配置文件目录在 /usr/local/hadoop/etc/hadoop/： cd $HADOOP_HOME/etc/hadoop 修改文件：slaves core-site.xml hdfs-site.xml marpred-site.xml yarn-site.xml hadoop-env.sh 这里注意 hadoop 3.x 后 slaves文件改为workers文件 hadoop 3.x 还需要修改目录 “/usr/local/hadoop/sbin/”下的start-dfs.sh，start-yarn.sh文件 具体修改内容如下： hadoop-env.sh: export JAVA_HOME=/usr/lib/jvm/default-java workers 123hadoop2hadoop3hadoop4 core-site.xml 1234567891011121314&lt;configuration&gt; &lt;!-- 指定hdfs的nameservice为ns1 --&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt; &lt;/property&gt; &lt;!-- --&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt; &lt;description&gt;Abase for other temporary directories. &lt;/description&gt; &lt;/property&gt; &lt;/configuration&gt; hdfs-site.xml 123456789101112131415161718&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt; &lt;value&gt;hadoop1:50090&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;3&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; marpred-site.xml 1234567891011121314&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt; &lt;value&gt;hadoop1:10020&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt; &lt;value&gt;hadoop1:19888&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; yarn-site.xml 12345678910&lt;configuration&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;hadoop1&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 修正 /usr/local/hadoop/sbin/start-dfs.sh 1234HDFS_DATANODE_USER=rootHADOOP_SECURE_DN_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root /usr/local/hadoop/sbin/start-yarn.sh 123YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root 如果是多节点服务器，复制同样的配置到各个节点上，如果是单节点的可以掠过以下内容 123- sudo tar -zcvf ~/hadoop.master.tar.gz /usr/local/hadoop #压缩hadoop配置- scp ./hadoop.master.tar.gz hadoop2:~ # 对hadoop2，3，4操作- sudo tar -zvxf ~/hadoop.master.tar.gz -C /usr/local 测试运行hadoop1主机启动hadoop hdfs namenode -format #首次启动需要先在 hadoop1 节点执行 NameNode 的格式化可能会有一些warning，没关系，只要如图successful 就好了。 namenode格式化只执行一次，如果执行多次，删除 “/usr/local/hadoop/tmp”文件夹后再重新格式化。 start-dfs.sh start-yarn.sh mr-jobhistory-daemon.sh start historyserver jps jps 查看各个节点启动的进程 ，如果正确可以看到以下进程。缺少其中任何进程都错误。 hadoop1:JobHistoryServer、ResourceManager、NameNode、SecondrryNameNode hadoop2，3，4:DataNode、NodeManager hdfs dfsadmin -report 查看 DataNode 是否正常.启动，如果 Live datanodes 不为 0 ，则说明集群启动成功.输入hadoop1的公网IP:50070,在浏览器产看相关信息。检查启动正确以后，可以通过start-all.sh替代以上命令停止指令如下：123stop-yarn.shstop-dfs.shmr-jobhistory-daemon.sh stop historyserver 执行分布式实例 首先创建 HDFS 上的用户目录 ： hdfs dfs -mkdir -p /user/root/input 将 /usr/local/hadoop/etc/hadoop 中的配置文件作为输入文件复制到分布式文件系统中:hdfs dfs -put /usr/local/hadoop/etc/hadoop/*.xml /user/root/input 运行程序：hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoopmapreduce-examples-*.jar grep input output 'dfs[a-z.]+' 使用命令行编译打包运行自己的MapReduce程序命令行编译打包运行 编写wordcount.java 123456789101112131415161718192021222324252627282930313233import java.io.IOException; import java.util.Iterator; import java.util.StringTokenizer; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.Path; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Job; import org.apache.hadoop.mapreduce.Mapper; import org.apache.hadoop.mapreduce.Reducer; import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; import org.apache.hadoop.util.GenericOptionsParser; public class WordCount { public WordCount() { } public static void main(String[] args) throws Exception { Configuration conf = new Configuration(); String[] otherArgs = (new GenericOptionsParser(conf, args)).getRemainingArgs(); if(otherArgs.length &lt; 2) { System.err.println(&quot;Usage: wordcount &lt;in&gt; [&lt;in&gt;...] &lt;out&gt;&quot;); System.exit(2); } Job job = Job.getInstance(conf, &quot;word count&quot;); job.setJarByClass(WordCount.class); job.setMapperClass(WordCount.TokenizerMapper.class); job.setCombinerClass(WordCount.IntSumReducer.class); job.setReducerClass(WordCount.IntSumReducer.class); job.setOutputKeyClass(Text.class); job.setOutputValueClass(IntWritable.class); for(int i = 0; i &lt; otherArgs.length - 1; ++i) { FileInputFormat.addInputPath(job, new Path(otherArgs[i])); } FileOutputFormat.setOutputPath(job, new Path(otherArgs[otherArgs.length - 1])); System.exit(job.waitForCompletion(true)?0:1); } public static class IntSumReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; { private IntWritable result = new IntWritable(); public IntSumReducer() { } public void reduce(Text key, Iterable&lt;IntWritable&gt; values, Reducer&lt;Text, IntWritable, Text, IntWritable&gt;.Context context) throws IOException, InterruptedException { int sum = 0; IntWritable val; for(Iterator i$ = values.iterator(); i$.hasNext(); sum += val.get()) { val = (IntWritable)i$.next(); } this.result.set(sum); context.write(key, this.result); } } public static class TokenizerMapper extends Mapper&lt;Object, Text, Text, IntWritable&gt; { private static final IntWritable one = new IntWritable(1); private Text word = new Text(); public TokenizerMapper() { } public void map(Object key, Text value, Mapper&lt;Object, Text, Text, IntWritable&gt;.Context context) throws IOException, InterruptedException { StringTokenizer itr = new StringTokenizer(value.toString()); while(itr.hasMoreTokens()) { this.word.set(itr.nextToken()); context.write(this.word, one); } } } } 我们在hadoop1下当前目录～新建个目录wordcount，copy代码进去WordCount.java，编译， 打包jar 1234sudo mkdir wordcount cd wordcount/ sudo vi WordCount.javajavac WordCount.java jar -cvf WordCount.jar WordCount*.class 打包完成后，运行试试，创建几个输入文件 1234sudo mkdir input echo &apos;this is my first hadoop lab&apos; &gt; input/file0 echo &apos;waiting a minute&apos; &gt; input/file1 echo &apos;this is my second hadoop try&apos; &gt; input/file2 把本地文件上传到分布式HDFS上 1234hdfs dfs -mkdir -p /user/hadoop # 重新创建个hdfs用户目录hadoop fs -put input/ /user/hadoop/ # 把本地文件上传到分布式HDFS上 hadoop jar WordCount.jar WordCount /user/hadoop/input /user/hadoop/output #开始运行hdfs dfs -cat /user/hadoop/output/part-r-00000 # 查看结果","link":"/c316c862.html"}],"tags":[{"name":"RL","slug":"RL","link":"/tags/RL/"},{"name":"Bandit","slug":"Bandit","link":"/tags/Bandit/"},{"name":"statics","slug":"statics","link":"/tags/statics/"},{"name":"AI","slug":"AI","link":"/tags/AI/"},{"name":"ML","slug":"ML","link":"/tags/ML/"},{"name":"Paper","slug":"Paper","link":"/tags/Paper/"},{"name":"IS","slug":"IS","link":"/tags/IS/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"小手册","slug":"小手册","link":"/tags/小手册/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Jupter","slug":"Jupter","link":"/tags/Jupter/"},{"name":"Latex","slug":"Latex","link":"/tags/Latex/"},{"name":"Sublime","slug":"Sublime","link":"/tags/Sublime/"},{"name":"Q&A","slug":"Q-A","link":"/tags/Q-A/"},{"name":"面试","slug":"面试","link":"/tags/面试/"}],"categories":[{"name":"Skill","slug":"Skill","link":"/categories/Skill/"},{"name":"Paper_reading","slug":"Paper-reading","link":"/categories/Paper-reading/"},{"name":"Class","slug":"Class","link":"/categories/Class/"},{"name":"Blogs","slug":"Blogs","link":"/categories/Blogs/"},{"name":"Events","slug":"Events","link":"/categories/Events/"},{"name":"Ideas","slug":"Ideas","link":"/categories/Ideas/"},{"name":"Films","slug":"Films","link":"/categories/Films/"},{"name":"Funny","slug":"Funny","link":"/categories/Funny/"}]}